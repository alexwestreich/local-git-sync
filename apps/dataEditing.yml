version: 43.0.9
pageUuid: 23ebea4d-3a02-4db6-84ad-ba83bc392fda
appTemplate:
  plugins:
    ordered:
      - moduleContainer:
          pluginTemplate:
            id: moduleContainer
            type: widget
            subtype: ModuleContainerWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - isGlobalWidgetContainer: true
                - style:
                    ordered: []
                - backgroundColor: white
                - title: ''
                - overflowType: hidden
                - disabled: ''
            position2:
              position2:
                height: 1
                width: 4
            mobilePosition2:
              position2:
                height: 12
                width: 12
            createdAt: 2021-04-09T13:55:10.078Z
      - image1:
          pluginTemplate:
            id: image1
            type: widget
            subtype: ImageWidget
            template:
              ordered:
                - valueToCopy: ''
                - isFile: false
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - style:
                    ordered: []
                - exportQuery: ''
                - imageUrl: >-
                    {{

                    State.value ?
                    "https://play-lh.googleusercontent.com/K4oZnEfXtevJrCkMX0aq2ZBDLBkHCN7E-ZL59ljJvVloE3A3C5D-tj8JT3LfZJCZeA"
                    :
                    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWsUtYzHqNCNylmkLVCiZnkTsLG2EARkaa4Wjmgmmg1BqDQZezGrEWb0qZcQB6w6E0l5A&usqp=CAU"

                    }}
                - action: OpenModaIfAllowed
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - imageFile: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: moduleContainer
                col: 10
                height: 1
                width: 2
            createdAt: 2021-04-09T14:52:54.855Z
      - State:
          pluginTemplate:
            id: State
            type: globalwidgetprop
            subtype: GlobalWidgetProp
            resourceName: GlobalWidgetQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - defaultValue: '{{true}}'
                - value: ''
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2021-04-09T14:53:28.881Z
      - EditorQuery:
          pluginTemplate:
            id: EditorQuery
            type: datasource
            subtype: GlobalWidgetQuery
            resourceName: GlobalWidgetQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - defaultValue: ''
                - value: ''
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2021-04-09T14:54:02.775Z
      - Editable:
          pluginTemplate:
            id: Editable
            type: globalwidgetprop
            subtype: GlobalWidgetProp
            resourceName: GlobalWidgetQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - defaultValue: '{{true}}'
                - value: ''
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2021-04-09T14:56:44.832Z
      - NextState:
          pluginTemplate:
            id: NextState
            type: globalwidgetoutput
            subtype: GlobalWidgetOutput
            template:
              ordered:
                - value: '{{ChangedState.value}}'
            createdAt: 2021-04-09T20:29:26.926Z
      - OpenModaIfAllowed:
          pluginTemplate:
            id: OpenModaIfAllowed
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    if(Editable.value) {
                      FieldChangeToggle.setValue(State.value)
                      EditableModal.open()
                    }
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2021-04-09T20:54:05.004Z
      - EditableModal:
          pluginTemplate:
            id: EditableModal
            type: widget
            subtype: ModalWidget
            template:
              ordered:
                - buttonBackgroundColor: '#3c92dc'
                - opened: false
                - modalOverflowType: hidden
                - hidden: 'true'
                - onModalClose: ''
                - modalHeightType: fixed
                - modalHeight: 200px
                - onModalOpen: ''
                - modalWidth: 350px
                - closeOnOutsideClick: false
                - loading: ''
                - disabled: ''
                - buttonText: Open Modal
            position2:
              position2:
                container: moduleContainer
                row: 1
                height: 1
                width: 12
            createdAt: 2021-04-09T20:54:48.982Z
      - FieldChangeToggle:
          pluginTemplate:
            id: FieldChangeToggle
            type: widget
            subtype: ToggleWidget
            template:
              ordered:
                - toggleOffQuery: ''
                - toggleType: default
                - tooltipText: ''
                - value: '{{State.value}}'
                - label: '{{FieldName.value}}'
                - toggleOnQuery: ''
                - labelMaxWidth: ''
                - labelPlacedOnLeft: false
                - disabled: ''
            position2:
              position2:
                container: EditableModal
                row: 1
                height: 1
                width: 12
            createdAt: 2021-04-09T21:00:36.659Z
      - FieldName:
          pluginTemplate:
            id: FieldName
            type: globalwidgetprop
            subtype: GlobalWidgetProp
            template:
              ordered:
                - value: ''
                - defaultValue: ''
            createdAt: 2021-04-09T21:02:03.183Z
      - EditFieldModalConfirmButton:
          pluginTemplate:
            id: EditFieldModalConfirmButton
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#16C37B'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: CHANGE
                - exportQuery: ''
                - action: ConfirmChange
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: EditableModal
                row: 2
                col: 6
                height: 1
                width: 6
            createdAt: 2021-04-09T21:03:03.758Z
      - EditFieldModalCloseButton:
          pluginTemplate:
            id: EditFieldModalCloseButton
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#cc5248'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: CANCEL
                - exportQuery: ''
                - action: CloseModal
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: EditableModal
                row: 2
                height: 1
                width: 6
            createdAt: 2021-04-09T21:03:07.106Z
      - CloseModal:
          pluginTemplate:
            id: CloseModal
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: EditableModal.close()
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2021-04-09T21:05:45.149Z
      - ConfirmChange:
          pluginTemplate:
            id: ConfirmChange
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |
                    if(FieldChangeToggle.value === State.value) {
                      throw new Error("Nothing changed")
                    }
                    ChangedState.setValue(FieldChangeToggle.value)
                    State.value = FieldChangeToggle.value
                    EditableModal.close()
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess:
                    - EditorQuery
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2021-04-09T21:07:41.093Z
      - ChangedState:
          pluginTemplate:
            id: ChangedState
            type: state
            subtype: State
            template:
              ordered:
                - value: null
            createdAt: 2021-04-09T21:12:49.337Z
      - text1:
          pluginTemplate:
            id: text1
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    <p>
                    <strong style=font-size:120%;
                    > {{FieldName.value}}
                    </strong>
                    </p>
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                container: moduleContainer
                height: 1
                width: 8
            createdAt: 2021-04-09T21:56:24.452Z
      - text2:
          pluginTemplate:
            id: text2
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    <p>
                    <strong style=font-size:120%;
                    > Status
                    </strong>
                    </p>
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                container: EditableModal
                height: 1
                width: 3
            createdAt: 2021-04-12T21:45:30.121Z
      - image2:
          pluginTemplate:
            id: image2
            type: widget
            subtype: ImageWidget
            template:
              ordered:
                - valueToCopy: ''
                - isFile: false
                - internalUrlHashParams: ''
                - hidden: '{{!Editable.value}}'
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - exportQuery: ''
                - imageUrl: >-
                    https://www.pngfind.com/pngs/m/275-2755033_edit-png-file-on-phone-svg-edit-icon.png
                - action: OpenModaIfAllowed
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - imageFile: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: moduleContainer
                col: 8
                height: 1
                width: 2
            createdAt: 2021-04-12T22:17:07.213Z
  urlFragmentDefinitions: []
  appStyles: ''
  appThemeId: null
  preloadedAppJavaScript: null
  pageLoadValueOverrides: []
  customDocumentTitle: ''
  isGlobalWidget: false
  isFetching: false
  instrumentationEnabled: false
  customDocumentTitleEnabled: false
  preloadedAppJSLinks:
    array: []
  version: 2.67.4
  responsiveLayoutDisabled: false
  createdAt: null
  loadingIndicatorsDisabled: false
