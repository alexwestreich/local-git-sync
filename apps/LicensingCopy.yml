version: 43.0.9
pageUuid: 80772eeb-299c-11e8-8c69-0bfb05c28656
appTemplate:
  plugins:
    ordered:
      - addCompany:
          pluginTemplate:
            id: addCompany
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getCompanies
                    - setSearchToCompanyName
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: ''
                - metadata: null
                - actionType: INSERT
                - triggersOnFailure:
                    - getCompanies
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: Are you sure?
                - isFetching: false
                - changeset: >-
                    [{"key":"name","value":"{{ textinput8.value
                    }}"},{"key":"created_at","value":"{{moment()}}"},{"key":"updated_at","value":"{{moment()}}"},{"key":"org_sid","value":"{{
                    textinput9.value
                    }}"},{"key":"salesforce_ref_type","value":"{{
                    textinput11.value
                    }}"},{"key":"salesforce_ref_id","value":"{{
                    textinput10.value }}"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getCompanies
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: setSearchToCompanyName
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: getCompanies
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: companies
                - queryTimeout: '10000'
                - requireConfirmation: true
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.819Z
      - getCompanies:
          pluginTemplate:
            id: getCompanies
            type: datasource
            subtype: SqlQuery
            resourceName: ruby analytics / licensing
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: |-
                    select
                      *
                    from
                      companies
                    where
                      (
                        {{ ! textinput1.value }}
                        or name ilike {{ '%' + textinput1.value + '%' }} or org_sid ilike {{ '%' + textinput1.value + '%' }}
                      )
                    order by
                      id desc;
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.819Z
      - form2Trigger:
          pluginTemplate:
            id: form2Trigger
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                
                
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                    - createLicenseKeySegment
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: ''
                - metadata: null
                - actionType: INSERT
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: Are you sure you want to create this license key?
                - isFetching: false
                - changeset: >-
                    [{"key":"license_key","value":"{{textinput2.value}}"},{"key":"expires_at","value":"{{datetimepicker1.value}}"},{"key":"billing_type","value":"{{select1.value}}"},{"key":"authorized_number_of_users","value":"0"},{"key":"domain","value":"{{textinput3.value}}"},{"key":"company_id","value":"{{
                    
                    .selectedRow.data.id}}"},{"key":"created_at","value":"now()"},{"key":"updated_at","value":"now()"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: createLicenseKeySegment
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: true
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.820Z
      - getDeployments:
          pluginTemplate:
            id: getDeployments
            type: datasource
            subtype: SqlQuery
            resourceName: ruby analytics / licensing
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: |-
                    select
                      *
                    from
                      deployments
                    where
                      (
                        {{ table1.selectedRow.data == null }}
                        OR company_id = {{ table1.selectedRow.data.id }}
                      )
                      AND (
                        {{ !searchToggle.value }}
                        or DOMAIN ilike {{ '%' + textinput12.value + '%' }}
                      )
                    order by
                      id desc;
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.820Z
      - getDeploymentUsers:
          pluginTemplate:
            id: getDeploymentUsers
            type: datasource
            subtype: SqlQuery
            resourceName: ruby analytics / licensing
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: >-
                    select * from users where deployment_id = {{
                    table2.selectedRow.data.id }}
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.821Z
      - extendTrial:
          pluginTemplate:
            id: extendTrial
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{
                    table2.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: UPDATE_BY
                - triggersOnFailure:
                    - getDeployments
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: '[{"key":"expires_at","value":"{{ moment().add(7, ''d'') }}"}]'
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.823Z
      - endTrial:
          pluginTemplate:
            id: endTrial
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{ table2.selectedRow.data.id
                    }}","operation":"="}]
                - metadata: null
                - actionType: UPDATE_BY
                - triggersOnFailure:
                    - getDeployments
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: >-
                    [{"key":"expires_at","value":"{{ moment().subtract(3, 'd')
                    }}"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.823Z
      - clearForm:
          pluginTemplate:
            id: clearForm
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    textinput2.setValue('')
                    textinput3.setValue('')
                    datetimepicker1.setValue('')
                    select1.setValue('')
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.823Z
      - generateLicenseKey:
          pluginTemplate:
            id: generateLicenseKey
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: textinput2.setValue(uuid.v4())
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.823Z
      - deleteDeployment:
          pluginTemplate:
            id: deleteDeployment
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"license_key","value":"{{
                    table2.selectedRow.data.license_key}}","operation":"="}]
                - metadata: null
                - actionType: DELETE_BY
                - triggersOnFailure:
                    - getDeployments
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: Are you sure you want to delete this license key?
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: true
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.823Z
      - getOnPremKey:
          pluginTemplate:
            id: getOnPremKey
            type: datasource
            subtype: RESTQuery
            resourceName: REST-WithoutResource
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: >-
                    [{"key":"license_key","value":"{{
                    table2.selectedRow.data.license_key
                    }}"},{"key":"nonce","value":"{{ clientid.value
                    }}"},{"key":"emails","value":"{{ [] }}"}]
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: https://licensing.tryretool.com/v1/licensing/verify_key
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - hideRequireConfirmation: false
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: POST
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: json
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.823Z
      - giveOneYearLicense:
          pluginTemplate:
            id: giveOneYearLicense
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{
                    table2.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: UPDATE_BY
                - triggersOnFailure:
                    - getDeployments
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: >-
                    [{"key":"expires_at","value":"{{ moment().add(1,
                    'year')}}"},{"key":"billing_type","value":"{{'invoice'}}"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.825Z
      - setExpirationDate:
          pluginTemplate:
            id: setExpirationDate
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{
                    table2.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: UPDATE_BY
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: '[{"key":"expires_at","value":"{{ datetimepicker2.value }}"}]'
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-08-07T11:18:35.825Z
      - hashSamlIdpMetadata:
          pluginTemplate:
            id: hashSamlIdpMetadata
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    async function hashMeta () {
                      const hash = await sha256(textinput6.value )
                      clientid.setValue(hash)
                    }
                    hashMeta()
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-11-11T23:15:01.378Z
      - setSeatCount:
          pluginTemplate:
            id: setSeatCount
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{
                    table2.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: UPDATE_BY
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: >-
                    [{"key":"authorized_number_of_users","value":"{{textinput7.value}}"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2018-11-29T01:18:40.117Z
      - getLicensedDeployments:
          pluginTemplate:
            id: getLicensedDeployments
            type: datasource
            subtype: SqlQuery
            resourceName: ruby analytics / licensing
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: "select\n  c.name, c.created_at, c.updated_at, d.expires_at, d.domain, d.created_at, d.updated_at, d.billing_type\nfrom\n  companies AS c\nJOIN\n\tdeployments as d on c.id = d.company_id\nwhere d.expires_at > {{moment()}} and d.expires_at < {{moment().add(2, 'months')}}\nOrder by d.expires_at asc"
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2019-10-27T18:27:46.893Z
      - recentlyExpired:
          pluginTemplate:
            id: recentlyExpired
            type: datasource
            subtype: SqlQuery
            resourceName: ruby analytics / licensing
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: "select\n  c.name, c.created_at, c.updated_at, d.expires_at, d.domain, d.created_at, d.updated_at, d.billing_type\nfrom\n  companies AS c\nJOIN\n\tdeployments as d on c.id = d.company_id\nwhere d.expires_at < {{moment()}} and d.expires_at > {{moment().subtract(2, 'months')}}\nOrder by d.expires_at desc"
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2019-12-05T07:18:48.557Z
      - getSalesforceLeads:
          pluginTemplate:
            id: getSalesforceLeads
            type: datasource
            subtype: SalesforceQuery
            resourceName: Retool Salesforce (Real)
            template:
              ordered:
                - queryRefreshTime: ''
                - queryType: soql
                - queryDisabledMessage: ''
                - apexMethod: get
                - apexBody: ''
                - successMessage: ''
                - SOQLQueryAutoFlatten: false
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - bulkLoadOptions: ''
                - runWhenModelUpdates: true
                - crudResourceType: ''
                - apexPath: ''
                - showFailureToaster: true
                - crudResourceID: ''
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - crudResourceBody: ''
                - bulkLoadAction: ''
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - bulkRecords: ''
                - triggersOnFailure: []
                - SOQLQuery: >-
                    Select Id, Name, Retool_Org_SID__c, Email from Lead where
                    Name LIKE '%{{textinput1.value}}%' or Email LIKE
                    '%{{textinput1.value}}%'
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - bulkLoadType: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - crudAction: retrieve
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-02-14T20:11:27.027Z
      - getSalesforceOpportunities:
          pluginTemplate:
            id: getSalesforceOpportunities
            type: datasource
            subtype: SalesforceQuery
            resourceName: Retool Salesforce (Real)
            template:
              ordered:
                - queryRefreshTime: ''
                - queryType: soql
                - queryDisabledMessage: ''
                - apexMethod: get
                - apexBody: ''
                - successMessage: ''
                - SOQLQueryAutoFlatten: false
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - bulkLoadOptions: ''
                - runWhenModelUpdates: true
                - crudResourceType: ''
                - apexPath: ''
                - showFailureToaster: true
                - crudResourceID: ''
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - crudResourceBody: ''
                - bulkLoadAction: ''
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - bulkRecords: ''
                - triggersOnFailure: []
                - SOQLQuery: >-
                    Select Id, Name, Retool_Org_SID__c from Opportunity where
                    Name LIKE '%{{textinput1.value}}%'
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - bulkLoadType: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - crudAction: retrieve
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-02-15T00:17:58.688Z
      - setSearchToCompanyName:
          pluginTemplate:
            id: setSearchToCompanyName
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: textinput1.setValue(textinput8.value)
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-02-26T18:49:53.630Z
      - createLicenseKeySegment:
          pluginTemplate:
            id: createLicenseKeySegment
            type: datasource
            subtype: RESTQuery
            resourceName: Analytics REST API
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: |
                    // Can be array or a single tracking payload
                    {
                      "type": "track",
                      "event": "License Key Assigned",
                      "properties": {
                        "name": {{table1.selectedRow.data.name || 'none'}},
                        "sfdcId": {{table1.selectedRow.data.salesforce_ref_id || 'none'}},
                        "sfdcType": {{table1.selectedRow.data.salesforce_ref_type || 'none'}},
                        "retoolOrgSid": {{table1.selectedRow.data.org_sid || 'none' }},
                        "licenseKey": {{textinput2.value || 'none'}},
                      }
                    }
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - paginationPaginationField: ''
                - headers: '[{"key":"Content-Type","value":"application/json"}]'
                - showFailureToaster: true
                - paginationEnabled: false
                - query: p
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - clearForm
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: clearForm
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: POST
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: raw
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-04-12T22:48:45.329Z
      - query23:
          pluginTemplate:
            id: query23
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: textinput1.focus()
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: true
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-08-11T19:31:55.283Z
      - searchForLicenseKey:
          pluginTemplate:
            id: searchForLicenseKey
            type: datasource
            subtype: SqlQuery
            resourceName: ruby analytics / licensing
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: |-
                    select
                      *
                    from
                      deployments
                    where
                      license_key = {{textinput13.value}}
                    order by
                      id desc;
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - importedQueryInputDefaults:
                    ordered: []
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-09-07T02:57:43.845Z
      - tableUpdateLicenseType:
          pluginTemplate:
            id: tableUpdateLicenseType
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{table2.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: UPDATE_BY
                - triggersOnFailure:
                    - getDeployments
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: >-
                    [{"key":"billing_type","value":"{{table2.recordUpdates['0'].billing_type}}"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-09-25T05:24:10.925Z
      - delCompany:
          pluginTemplate:
            id: delCompany
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: '[{"key":"id","value":"527","operation":"="}]'
                - metadata: null
                - actionType: DELETE_BY
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: companies
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-10-26T19:06:31.825Z
            folder: delete_utils
      - updateCompany:
          pluginTemplate:
            id: updateCompany
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: '[{"key":"id","value":"582","operation":"="}]'
                - metadata: null
                - actionType: UPDATE_BY
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: '[{"key":"name","value":"Austin"}]'
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: companies
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-10-26T19:03:56.005Z
            folder: delete_utils
      - delDeployment:
          pluginTemplate:
            id: delDeployment
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: '[{"key":"id","value":"886","operation":"="}]'
                - metadata: null
                - actionType: DELETE_BY
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: false
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: true
                - notificationDuration: ''
            createdAt: 2021-06-06T17:06:15.772Z
            folder: delete_utils
      - getFeatureFlagOverridesForDeployment:
          pluginTemplate:
            id: getFeatureFlagOverridesForDeployment
            type: datasource
            subtype: SqlQuery
            resourceName: ruby analytics / licensing
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: |-
                    select * from feature_flag_overrides
                    where deployment_id = {{table2.selectedRow.data.id}}
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-11-10T18:24:09.856Z
      - upsertFeatureFlagOverride:
          pluginTemplate:
            id: upsertFeatureFlagOverride
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getFeatureFlagOverridesForDeployment
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"feature_flag_name","value":"{{select2.value}}","operation":"="},{"key":"deployment_id","value":"{{table2.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: UPDATE_OR_INSERT_BY
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: >-
                    [{"key":"deployment_id","value":"{{table2.selectedRow.data.id}}"},{"key":"feature_flag_name","value":"{{select2.value}}"},{"key":"is_active","value":"{{toggle3.value}}"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getFeatureFlagOverridesForDeployment
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: feature_flag_overrides
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-11-10T19:28:14.854Z
      - deleteFeatureFlagOverride:
          pluginTemplate:
            id: deleteFeatureFlagOverride
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getFeatureFlagOverridesForDeployment
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{table7.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: DELETE_BY
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getFeatureFlagOverridesForDeployment
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: feature_flag_overrides
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2020-11-10T19:47:53.257Z
      - tableUpdateDeployment:
          pluginTemplate:
            id: tableUpdateDeployment
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: '{{ table2.recordUpdates }}'
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess:
                    - getDeployments
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: >-
                    [{"key":"id","value":"{{table2.selectedRow.data.id}}","operation":"="}]
                - metadata: null
                - actionType: BULK_UPDATE_BY_KEY
                - triggersOnFailure:
                    - getDeployments
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: >-
                    [{"key":"billing_type","value":"{{table2.recordUpdates['0'].billing_type}}"}]
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: id
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: getDeployments
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - tableName: deployments
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-03-22T17:49:48.828Z
      - query31:
          pluginTemplate:
            id: query31
            type: datasource
            subtype: RetoolTableQuery
            resourceName: retool-management-writes
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - filterBy: ''
                - metadata: null
                - actionType: ''
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-03-18T01:34:36.496Z
      - form1:
          pluginTemplate:
            id: form1
            type: widget
            subtype: FormWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - clearFormAfterSubmit: false
                - borderless: false
                - requireValidFormForSubmit: true
                - showBorder: true
                - data: ''
                - showDropShadow: true
                - submitButtonFullWidth: false
                - style:
                    ordered: []
                - submitDisabled: '{{ textinput8.value == '''' || textinput8.value == ''n/a'' }}'
                - submitButtonText: Add '{{ textinput8.value }}' to Companies
                - onSubmit: addCompany
                - requiredFormControls: []
                - events:
                    - ordered:
                        - event: submit
                        - type: datasource
                        - method: trigger
                        - pluginId: addCompany
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - hideSubmit: false
                - loading: ''
                - overflowType: hidden
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 2
                height: 14
                width: 4
            createdAt: 2018-08-07T11:18:35.819Z
      - text1:
          pluginTemplate:
            id: text1
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '### Search'
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                height: 1
                width: 2
            createdAt: 2018-08-07T11:18:35.819Z
      - textinput1:
          pluginTemplate:
            id: textinput1
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - docsSlug: textinput
                - validatonType: ''
                - currencyType: USD
                - leftIconName: search
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: ''
                - value: __RETOOL_CONTROLLED_PROPERTY__
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: Company name...
                - validationType: regexp
                - label: ''
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: ''
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: ''
            style:
              ordered: []
            position2:
              position2:
                row: 1
                height: 1
                width: 4
            createdAt: 2018-08-07T11:18:35.819Z
      - table1:
          pluginTemplate:
            id: table1
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - actionButtonQuery: ''
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - actionButtonType: runQuery
                - saveChangesDisabled: ''
                - columnWidths:
                    - object:
                        id: Title
                        value: 250
                    - object:
                        id: Sales
                        value: 150
                    - object:
                        id: created_at
                        value: 130.796875
                    - object:
                        id: name
                        value: 160.296875
                    - object:
                        id: id
                        value: 69.95309448242188
                - actionButtonDisabled: ''
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - salesforce_ref_type: ''
                      - salesforce_ref_id: ''
                      - created_at: ''
                      - name: ''
                      - Sales: orange
                      - org_sid: ''
                      - updated_at: ''
                      - Title: blue
                      - id: ''
                      - Description: green
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered:
                      - created_at: date
                      - updated_at: date
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - actionButtonUrl: ''
                - actionButton: false
                - actionButtonNewWindow: false
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - salesforce_ref_type: true
                      - salesforce_ref_id: true
                      - created_at: true
                      - name: true
                      - Sales: true
                      - org_sid: true
                      - updated_at: true
                      - Title: true
                      - id: true
                      - Description: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{getCompanies.data}}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: false
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - actionButtonInternalUrlPath: ''
                - showRefreshButton: true
                - pageSize: 7
                - useDynamicColumnSettings: false
                - style:
                    ordered: []
                - selectedColumn: null
                - actionButtonPosition: right
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - actionButtonText: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: false
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: true
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - Title
                    - Sales
                    - Description
                    - id
                    - name
                    - created_at
                    - updated_at
                    - org_sid
                    - salesforce_ref_type
                    - salesforce_ref_id
                - sort: null
                - actionButtonInternalUrlQuery: ''
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            style:
              ordered: []
            position2:
              position2:
                row: 1
                col: 4
                height: 7
                width: 8
            createdAt: 2018-08-07T11:18:35.820Z
      - form2:
          pluginTemplate:
            id: form2
            type: widget
            subtype: FormWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - clearFormAfterSubmit: false
                - borderless: false
                - requireValidFormForSubmit: true
                - showBorder: true
                - data: ''
                - showDropShadow: true
                - submitButtonFullWidth: false
                - style:
                    ordered: []
                - submitDisabled: ''
                - submitButtonText: Create Deployment
                - onSubmit: form2Trigger
                - requiredFormControls: []
                - events:
                    - ordered:
                        - event: submit
                        - type: datasource
                        - method: trigger
                        - pluginId: form2Trigger
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - hideSubmit: false
                - loading: ''
                - overflowType: hidden
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 16
                height: 11
                width: 4
            createdAt: 2018-08-07T11:18:35.820Z
      - text2:
          pluginTemplate:
            id: text2
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - hidden: ''
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >-
                    ### Add a deployment and license key to: 

                    #### {{ licenseKeyFormTransformer.value }}'s deployment id
                    {{table2.selectedRow.data.id}}
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: form2
                height: 2
                width: 12
            createdAt: 2018-08-07T11:18:35.820Z
      - textinput2:
          pluginTemplate:
            id: textinput2
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - docsSlug: textinput
                - validatonType: ''
                - currencyType: USD
                - leftIconName: key
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: ''
                - value: __RETOOL_CONTROLLED_PROPERTY__
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: License key...
                - validationType: regexp
                - label: ''
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: ''
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: true
            style:
              ordered: []
            position2:
              position2:
                container: form2
                row: 3
                height: 1
                width: 8
            createdAt: 2018-08-07T11:18:35.820Z
      - datetimepicker1:
          pluginTemplate:
            id: datetimepicker1
            type: widget
            subtype: DateTimePickerWidget
            template:
              ordered:
                - minDate: ''
                - showTime: false
                - formattedString: null
                - defaultValue: null
                - tooltipText: ''
                - value: '{{ moment().add(2, ''weeks'') }}'
                - style:
                    ordered: []
                - maxDate: ''
                - placeholder: ''
                - label: 'Expiration Date:'
                - labelMaxWidth: ''
                - labelPlacedOnLeft: ''
                - format: MM/DD/YYYY
                - validationState: ''
                - onSelect: ''
                - disabled: ''
                - useLocalTimezone: true
            style:
              ordered: []
            position2:
              position2:
                container: form2
                row: 6
                height: 1
                width: 12
            createdAt: 2018-08-07T11:18:35.820Z
      - select1:
          pluginTemplate:
            id: select1
            type: widget
            subtype: SelectWidget
            template:
              ordered:
                - enableClientSideMatching: true
                - values: '["stripe", "invoice", "trial"]'
                - allowOutOfRangeValues: false
                - enableFuzzyMatching: true
                - searchValue: ''
                - showFetchingIndicator: true
                - enableCaseSensitivity: false
                - validationMessage: ''
                - displayValue: ''
                - tooltipText: >-
                    This helps with billing and determines the error message
                    clients see when the key is expiring soon. You can change an
                    existing key from trial to invoice in the billing_type
                    dropdown in the table to the upper left.
                - value: ''
                - style:
                    ordered: []
                - maxResults: 50
                - placeholder: Pick license type
                - label: 'License Type:'
                - clearValueOnFocus: true
                - labelMaxWidth: ''
                - labelPlacedOnLeft: ''
                - validationState: ''
                - onSelect: ''
                - allowCustomValues: false
                - disabled: ''
                - hideClearButton: false
                - required: false
                - labels: '["stripe", "invoice", "trial"]'
            style:
              ordered: []
            position2:
              position2:
                container: form2
                row: 7
                height: 1
                width: 12
            createdAt: 2018-08-07T11:18:35.820Z
      - textinput3:
          pluginTemplate:
            id: textinput3
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - docsSlug: textinput
                - validatonType: ''
                - currencyType: USD
                - leftIconName: desktop
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: >-
                    There might be some Retool apps that filter/search by this.
                    You can include the https://
                - value: __RETOOL_CONTROLLED_PROPERTY__
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: Enter domain
                - validationType: regexp
                - label: 'Domain name: '
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: ''
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: true
            style:
              ordered: []
            position2:
              position2:
                container: form2
                row: 8
                height: 1
                width: 12
            createdAt: 2018-08-07T11:18:35.820Z
      - table2:
          pluginTemplate:
            id: table2
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - actionButtonQuery: ''
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - actionButtonType: runQuery
                - saveChangesDisabled: ''
                - columnWidths:
                    - object:
                        id: Title
                        value: 250
                    - object:
                        id: Sales
                        value: 150
                    - object:
                        id: company_id
                        value: 82
                    - object:
                        id: id
                        value: 54
                    - object:
                        id: license_key
                        value: 112
                    - object:
                        id: created_at
                        value: 108
                    - object:
                        id: updated_at
                        value: 178
                    - object:
                        id: authorized_number_of_users
                        value: 170
                    - object:
                        id: billing_type
                        value: 112
                    - object:
                        id: domain
                        value: 167
                    - object:
                        id: expires_at
                        value: 110
                - actionButtonDisabled: ''
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered:
                      - billing_type:
                          ordered:
                            - dropdownValues: '["stripe", "invoice", "trial"]'
                            - dropdownLabels: '["stripe", "invoice", "trial"]'
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - license_key: ''
                      - domain: ''
                      - trial_expiring: ''
                      - did_deploy: ''
                      - created_at: ''
                      - ssopOrgSid: ''
                      - stripe_subscription_id: ''
                      - Sales: orange
                      - num_users: ''
                      - version_number: ''
                      - ssop_user_id: ''
                      - authorized_number_of_users: ''
                      - subscription_status: ''
                      - updated_at: ''
                      - Title: blue
                      - id: ''
                      - Description: green
                      - company_id: ''
                      - expires_at: '{{moment('self') > moment() ? "forestgreen" : ''pink''}}'
                      - billing_type: ''
                      - stripe_plan_id: ''
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered:
                      - expires_at: date
                      - created_at: date
                      - billing_type: dropdown
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - actionButtonUrl: ''
                - actionButton: false
                - actionButtonNewWindow: false
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - license_key: true
                      - domain: true
                      - trial_expiring: true
                      - did_deploy: true
                      - created_at: true
                      - ssopOrgSid: true
                      - stripe_subscription_id: true
                      - Sales: true
                      - num_users: true
                      - version_number: false
                      - ssop_user_id: true
                      - authorized_number_of_users: true
                      - subscription_status: true
                      - updated_at: true
                      - Title: true
                      - id: true
                      - Description: true
                      - company_id: true
                      - expires_at: true
                      - billing_type: true
                      - stripe_plan_id: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{getDeployments.data}}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: false
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - actionButtonInternalUrlPath: ''
                - showRefreshButton: true
                - pageSize: 6
                - useDynamicColumnSettings: false
                - style:
                    ordered: []
                - selectedColumn: null
                - actionButtonPosition: right
                - bulkUpdateAction: tableUpdateDeployment
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - actionButtonText: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: false
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - events:
                    - ordered:
                        - event: saveChanges
                        - type: datasource
                        - method: trigger
                        - pluginId: tableUpdateDeployment
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - columnEditable:
                    ordered:
                      - domain: true
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - id
                    - domain
                    - license_key
                    - created_at
                    - expires_at
                    - billing_type
                    - company_id
                    - authorized_number_of_users
                    - version_number
                    - updated_at
                    - stripe_subscription_id
                    - ssop_user_id
                    - stripe_plan_id
                    - subscription_status
                    - trial_expiring
                    - did_deploy
                    - ssopOrgSid
                    - num_users
                - sort: null
                - actionButtonInternalUrlQuery: ''
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            style:
              ordered: []
            position2:
              position2:
                container: container3
                row: 1
                height: 6
                width: 11
            createdAt: 2018-08-07T11:18:35.820Z
      - table3:
          pluginTemplate:
            id: table3
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - actionButtonQuery: ''
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - actionButtonType: runQuery
                - saveChangesDisabled: ''
                - columnWidths:
                    - object:
                        id: Title
                        value: 250
                    - object:
                        id: Sales
                        value: 150
                    - object:
                        id: email
                        value: 198.9375
                - actionButtonDisabled: ''
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - last_login: ''
                      - created_at: ''
                      - Sales: orange
                      - deployment_id: ''
                      - updated_at: ''
                      - Title: blue
                      - id: ''
                      - email: ''
                      - Description: green
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: false
                - actionButtonUrl: ''
                - actionButton: false
                - actionButtonNewWindow: false
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - last_login: true
                      - created_at: true
                      - Sales: true
                      - deployment_id: true
                      - updated_at: true
                      - Title: true
                      - id: true
                      - email: true
                      - Description: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{  getDeploymentUsers.data  }}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: false
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - actionButtonInternalUrlPath: ''
                - showRefreshButton: true
                - pageSize: 4
                - useDynamicColumnSettings: false
                - style:
                    ordered: []
                - selectedColumn: null
                - actionButtonPosition: right
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - actionButtonText: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: false
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - Title
                    - Sales
                    - Description
                    - id
                    - deployment_id
                    - email
                    - last_login
                    - created_at
                    - updated_at
                - sort: null
                - actionButtonInternalUrlQuery: ''
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 2
                height: 4
                width: 12
            createdAt: 2018-08-07T11:18:35.821Z
      - text3:
          pluginTemplate:
            id: text3
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '### Key for {{table2.selectedRow.data.domain}}: '
                - style:
                    ordered: []
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: container1
                height: 1
                width: 9
            createdAt: 2018-08-07T11:18:35.821Z
      - container1:
          pluginTemplate:
            id: container1
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - style:
                    ordered: []
                - backgroundColor: white
                - title: ''
                - overflowType: visible
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 16
                col: 4
                height: 6
                width: 8
            createdAt: 2018-08-07T11:18:35.821Z
      - text4:
          pluginTemplate:
            id: text4
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >-
                    #### Users in deployment: {{
                    table2.selectedRow.data.domain}}
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 1
                height: 1
                width: 8
            createdAt: 2018-08-07T11:18:35.821Z
      - text5:
          pluginTemplate:
            id: text5
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >-
                    ### Expired: {{ moment(table2.selectedRow.data.expires_at) <
                    moment() }}
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: container1
                row: 2
                col: 6
                height: 1
                width: 6
            createdAt: 2018-08-07T11:18:35.821Z
      - button1:
          pluginTemplate:
            id: button1
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#478b60'
                - internalUrlHashParams: ''
                - exportFileType: xlsx
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: true
                - value: Extend Trial (7 days)
                - style:
                    ordered:
                      - accent-background: '#478b60'
                - exportQuery: ''
                - action: extendTrial
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: extendTrial
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: export
                - loading: ''
                - disabled: '{{ moment(table2.selectedRow.data.expires_at) > moment() }}'
            style:
              ordered:
                - accent-background: '#478b60'
            position2:
              position2:
                container: container1
                row: 4
                col: 6
                height: 1
                width: 3
            createdAt: 2018-08-07T11:18:35.823Z
      - button2:
          pluginTemplate:
            id: button2
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#d87b1f'
                - internalUrlHashParams: ''
                - exportFileType: xlsx
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: true
                - value: End Trial
                - style:
                    ordered:
                      - accent-background: '#d87b1f'
                - exportQuery: ''
                - action: endTrial
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: endTrial
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: export
                - loading: ''
                - disabled: '{{ moment(table2.selectedRow.data.expires_at) < moment() }}'
            style:
              ordered:
                - accent-background: '#d87b1f'
            position2:
              position2:
                container: container1
                row: 4
                height: 1
                width: 3
            createdAt: 2018-08-07T11:18:35.823Z
      - button4:
          pluginTemplate:
            id: button4
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#555555'
                - internalUrlHashParams: ''
                - exportFileType: xlsx
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: true
                - value: Generate Key
                - style:
                    ordered:
                      - accent-background: '#555555'
                - exportQuery: ''
                - action: generateLicenseKey
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: generateLicenseKey
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: export
                - loading: ''
                - disabled: '{{table1.selectedRow.data == null}}'
            style:
              ordered:
                - accent-background: '#555555'
            position2:
              position2:
                container: form2
                row: 3
                col: 8
                height: 1
                width: 4
            createdAt: 2018-08-07T11:18:35.823Z
      - button5:
          pluginTemplate:
            id: button5
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#cc5248'
                - internalUrlHashParams: ''
                - exportFileType: xlsx
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: true
                - value: Delete Key
                - style:
                    ordered:
                      - accent-background: '#cc5248'
                - exportQuery: ''
                - action: deleteDeployment
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: deleteDeployment
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: export
                - loading: ''
                - disabled: ''
            style:
              ordered:
                - accent-background: '#cc5248'
            position2:
              position2:
                container: container1
                row: 4
                col: 3
                height: 1
                width: 3
            createdAt: 2018-08-07T11:18:35.823Z
      - button6:
          pluginTemplate:
            id: button6
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: xlsx
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: true
                - tooltipText: >-
                    {{button6.disabled == true ? "Please set a set count before
                    generating an airgapped key." : undefined}}
                - value: Generate Offline License Key
                - style:
                    ordered:
                      - accent-background: '#262626ff'
                      - accent-background-light: '#3f3f3fff'
                      - accent-background-lightest: '#3f3f3f66'
                      - accent-background-dark: '#000000ff'
                      - highlight-background: '#26262624'
                - exportQuery: ''
                - action: getOnPremKey
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: getOnPremKey
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: export
                - loading: ''
                - disabled: '{{table2.selectedRow.data.authorized_number_of_users == 0}}'
            style:
              ordered:
                - accent-background: '#262626ff'
                - accent-background-light: '#3f3f3fff'
                - accent-background-lightest: '#3f3f3f66'
                - accent-background-dark: '#000000ff'
                - highlight-background: '#26262624'
            position2:
              position2:
                container: container2
                row: 12
                col: 6
                height: 2
                width: 6
            createdAt: 2018-08-07T11:18:35.823Z
      - text6:
          pluginTemplate:
            id: text6
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >-
                    <textarea class='code' cols=80 rows=10 readonly>

                    {{ _.get(getOnPremKey, 'data.payload').replace(/\n/g, ' ') +
                    '|' + _.get(getOnPremKey, 'data.signature').replace(/\n/g, '
                    ').trim()}}</textarea>

                    <style>
                      textarea.code { font-family: 'Source Code Pro' }
                    </style>
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: false
            style:
              ordered: []
            position2:
              position2:
                row: 64
                col: 2
                height: 4
                width: 10
            createdAt: 2018-08-07T11:18:35.825Z
      - button7:
          pluginTemplate:
            id: button7
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#478b60'
                - internalUrlHashParams: ''
                - exportFileType: xlsx
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: true
                - tooltipText: >-
                    This adds 1 year to the expiration date and updates the
                    `billing_type` to `invoice` (which makes the banner say
                    invoice )
                - value: Set one year license
                - style:
                    ordered:
                      - accent-background: '#478b60ff'
                      - accent-background-light: '#5aab78ff'
                      - accent-background-lightest: '#5aab7866'
                      - accent-background-dark: '#254731ff'
                      - highlight-background: '#478b6024'
                - exportQuery: ''
                - action: giveOneYearLicense
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: giveOneYearLicense
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: export
                - loading: ''
                - disabled: ''
            style:
              ordered:
                - accent-background: '#478b60ff'
                - accent-background-light: '#5aab78ff'
                - accent-background-lightest: '#5aab7866'
                - accent-background-dark: '#254731ff'
                - highlight-background: '#478b6024'
            position2:
              position2:
                container: container1
                row: 3
                height: 1
                width: 3
            createdAt: 2018-08-07T11:18:35.825Z
      - button8:
          pluginTemplate:
            id: button8
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#d6757f'
                - internalUrlHashParams: ''
                - exportFileType: xlsx
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Set custom expiration
                - style:
                    ordered:
                      - accent-background: '#d6757f'
                - exportQuery: ''
                - action: setExpirationDate
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: setExpirationDate
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: export
                - loading: ''
                - disabled: '{{ !datetimepicker2.value }}'
            style:
              ordered:
                - accent-background: '#d6757f'
            position2:
              position2:
                container: container1
                row: 3
                col: 3
                height: 1
                width: 3
            createdAt: 2018-08-07T11:18:35.825Z
      - datetimepicker2:
          pluginTemplate:
            id: datetimepicker2
            type: widget
            subtype: DateTimePickerWidget
            template:
              ordered:
                - minDate: ''
                - showTime: false
                - formattedString: null
                - defaultValue: null
                - tooltipText: ''
                - value: '{{table2.selectedRow.data.expires_at}}'
                - style:
                    ordered: []
                - maxDate: ''
                - placeholder: ''
                - label: Expiration Date
                - labelMaxWidth: ''
                - labelPlacedOnLeft: ''
                - format: MM/DD/YYYY
                - validationState: ''
                - onSelect: ''
                - disabled: ''
                - useLocalTimezone: true
            style:
              ordered: []
            position2:
              position2:
                container: container1
                row: 2
                height: 1
                width: 6
            createdAt: 2018-08-07T11:18:35.825Z
      - clientid:
          pluginTemplate:
            id: clientid
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - docsSlug: textinput
                - validatonType: ''
                - currencyType: USD
                - leftIconName: search
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: ''
                - value: __RETOOL_CONTROLLED_PROPERTY__
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Nonce or Google Client ID
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: ''
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: ''
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 16
                height: 1
                width: 6
            createdAt: 2018-08-07T11:18:35.825Z
      - textinput6:
          pluginTemplate:
            id: textinput6
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - docsSlug: textinput
                - validatonType: ''
                - currencyType: USD
                - leftIconName: search
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: >-
                    <?xml version="1.0" encoding="utf-8"?><EntityDescriptor
                    ID="_75740ad8-c762-4ae9-9c18-825b21218ef8"
                    entityID="https://sts.windows.net/6c7ec574-5904-4d49-bd18-6ab3d432ad2d/"
                    xmlns="urn:oasis:names:tc:SAML:2.0:metadata"><Signature
                    xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedIn
                - validationType: regexp
                - label: saml idp metadata
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: ''
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 6
                height: 4
                width: 10
            createdAt: 2018-11-11T23:14:29.682Z
      - button9:
          pluginTemplate:
            id: button9
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - tooltipText: Can't get nonce without SAML IDP metadata
                - value: Get Nonce
                - style:
                    ordered: []
                - exportQuery: ''
                - action: hashSamlIdpMetadata
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: hashSamlIdpMetadata
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: ''
                - loading: ''
                - disabled: '{{ !textinput6.value}}'
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 11
                col: 6
                height: 1
                width: 6
            createdAt: 2018-11-11T23:14:53.230Z
      - textinput7:
          pluginTemplate:
            id: textinput7
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - docsSlug: textinput
                - validatonType: ''
                - currencyType: USD
                - leftIconName: user-add
                - initialValue: '{{ table2.selectedRow.data.authorized_number_of_users}}'
                - validationMessage: ''
                - tooltipText: >-
                    If you are generating a new airgapped license, this is
                    typically the number of users covered by the platform fee.


                    Do not leave at 0, that will give them unlimited users!
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: Seat Count
                - validationType: regexp
                - label: Seat Count
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: ''
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: number
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 10
                height: 1
                width: 6
            createdAt: 2018-11-29T01:17:24.697Z
      - button12:
          pluginTemplate:
            id: button12
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - tooltipText: You have to do this before generating the key
                - value: Set Seat Count
                - style:
                    ordered: []
                - exportQuery: ''
                - action: setSeatCount
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: setSeatCount
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 10
                col: 6
                height: 1
                width: 6
            createdAt: 2018-11-29T01:18:07.843Z
      - text7:
          pluginTemplate:
            id: text7
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '**Step 1:** Generate Unique License Key'
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: form2
                row: 2
                height: 1
                width: 12
            mobilePosition2:
              position2:
                container: form2
                row: 2
                height: 1
                width: 3
            createdAt: 2019-09-27T00:08:35.613Z
      - text8:
          pluginTemplate:
            id: text8
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |-
                    <hr>

                    **Step 2:** Add details and create the license
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: form2
                row: 4
                height: 2
                width: 12
            mobilePosition2:
              position2:
                container: form2
                row: 4
                height: 1
                width: 3
            createdAt: 2019-09-27T00:09:09.405Z
      - text9:
          pluginTemplate:
            id: text9
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '### Companies in the License DB'
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                col: 4
                height: 1
                width: 3
            mobilePosition2:
              position2:
                row: 1
                col: 4
                height: 1
                width: 3
            createdAt: 2019-09-27T00:13:55.933Z
      - text10:
          pluginTemplate:
            id: text10
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '### {{ deploymentsTransformer.value }} Deployments'
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: container3
                height: 1
                width: 5
            mobilePosition2:
              position2:
                row: 8
                col: 4
                height: 1
                width: 3
            createdAt: 2019-09-27T00:14:11.353Z
      - table4:
          pluginTemplate:
            id: table4
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths:
                    - object:
                        id: expires_at
                        value: 111.765625
                    - object:
                        id: created_at
                        value: 111.515625
                    - object:
                        id: domain
                        value: 135.765625
                    - object:
                        id: name
                        value: 187
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - name: ''
                      - created_at: ''
                      - updated_at: ''
                      - expires_at: >-
                          {{moment('self') < moment().add(7,'days') ? "pink" :
                          moment('self') < moment().add(28,'days') ? "yellow" :
                          ""}}
                      - domain: ''
                      - billing_type: >-
                          {{'self' == 'invoice' || 'self' == 'stripe' ? 'green' :
                          ''}}
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered:
                      - expires_at: date
                      - created_at: date
                      - updated_at: date
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - domain: true
                      - created_at: true
                      - name: true
                      - Sales: true
                      - updated_at: true
                      - Title: true
                      - Description: true
                      - expires_at: true
                      - billing_type: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: true
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{getLicensedDeployments.data}}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - showRefreshButton: true
                - pageSize: 21
                - useDynamicColumnSettings: false
                - style:
                    ordered: []
                - selectedColumn: null
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - Title
                    - Description
                    - Sales
                    - name
                    - domain
                    - expires_at
                    - billing_type
                    - created_at
                    - updated_at
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            style:
              ordered: []
            position2:
              position2:
                container: container4
                row: 1
                height: 15
                width: 6
            mobilePosition2:
              position2:
                row: 40
                height: 8
                width: 8
            createdAt: 2019-10-27T18:27:29.329Z
      - container2:
          pluginTemplate:
            id: container2
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - hidden: '{{!showoldstuff.value}}'
                - showDropShadow: true
                - style:
                    ordered: []
                - backgroundColor: white
                - title: ''
                - overflowType: visible
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 22
                col: 4
                height: 18
                width: 8
            mobilePosition2:
              position2:
                row: 41
                col: 4
                height: 8
                width: 6
            createdAt: 2019-10-27T18:40:05.467Z
      - text11:
          pluginTemplate:
            id: text11
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: |-
                    Red = next 7 days. 

                    Yellow = next 28 days. 
                - value: '### Licenses expiring in next 2 months:'
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: container4
                height: 1
                width: 4
            mobilePosition2:
              position2:
                row: 25
                height: 1
                width: 3
            createdAt: 2019-10-27T18:42:37.786Z
      - showoldstuff:
          pluginTemplate:
            id: showoldstuff
            type: widget
            subtype: ToggleWidget
            template:
              ordered:
                - toggleOffQuery: ''
                - toggleType: default
                - tooltipText: ''
                - value: 'true'
                - style:
                    ordered: []
                - label: Show Airgapped
                - toggleOnQuery: ''
                - labelMaxWidth: ''
                - labelPlacedOnLeft: ''
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                col: 11
                height: 1
                width: 1
            mobilePosition2:
              position2:
                row: 25
                col: 7
                height: 1
                width: 2
            createdAt: 2019-10-27T18:43:34.356Z
      - table5:
          pluginTemplate:
            id: table5
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths:
                    - object:
                        id: expires_at
                        value: 111.765625
                    - object:
                        id: created_at
                        value: 111.515625
                    - object:
                        id: domain
                        value: 135.765625
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - name: ''
                      - created_at: ''
                      - updated_at: ''
                      - expires_at: ''
                      - domain: ''
                      - billing_type: >-
                          {{'self' == 'invoice' || 'self' == 'stripe' ? 'green' :
                          ''}}
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered:
                      - expires_at: date
                      - created_at: date
                      - updated_at: date
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - domain: true
                      - created_at: true
                      - name: true
                      - Sales: true
                      - updated_at: true
                      - Title: true
                      - Description: true
                      - expires_at: true
                      - billing_type: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: true
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{recentlyExpired.data}}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - showRefreshButton: true
                - pageSize: 21
                - useDynamicColumnSettings: false
                - style:
                    ordered: []
                - selectedColumn: null
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - Title
                    - Description
                    - Sales
                    - name
                    - domain
                    - expires_at
                    - billing_type
                    - created_at
                    - updated_at
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            style:
              ordered: []
            position2:
              position2:
                container: container4
                row: 1
                col: 6
                height: 15
                width: 6
            mobilePosition2:
              position2:
                row: 41
                height: 15
                width: 5
            createdAt: 2019-12-05T07:18:01.885Z
      - text12:
          pluginTemplate:
            id: text12
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '### Recently expired licenses:'
                - style:
                    ordered: []
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: container4
                col: 6
                height: 1
                width: 5
            mobilePosition2:
              position2:
                row: 41
                height: 1
                width: 3
            createdAt: 2019-12-05T07:18:12.636Z
      - table6:
          pluginTemplate:
            id: table6
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths:
                    - object:
                        id: Retool_Org_SID__c
                        value: 95.890625
                    - object:
                        id: Name
                        value: 117.890625
                    - object:
                        id: Calculated Column 1
                        value: 65
                    - object:
                        id: type
                        value: 66
                    - object:
                        id: Email
                        value: 215.875
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered:
                      - Calculated Column 1: Type
                      - type: Type
                      - Retool_Org_SID__c: Retool SID
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - Retool_Org_SID__c: ''
                      - Calculated Column 1: ''
                      - name: ''
                      - Name: ''
                      - sid: ''
                      - attributes: ''
                      - type: ''
                      - id: ''
                      - Id: ''
                      - Email: ''
                      - email: ''
                      - Company: ''
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered:
                      - Calculated Column 1: string
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - Retool_Org_SID__c: true
                      - name: true
                      - Name: true
                      - Sales: true
                      - sid: true
                      - attributes: false
                      - Title: true
                      - type: true
                      - id: true
                      - Id: false
                      - Email: true
                      - email: true
                      - Description: true
                      - Company: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{ salesforceLeadsAndOpps.value }}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - showRefreshButton: true
                - pageSize: 6
                - useDynamicColumnSettings: false
                - style:
                    ordered: []
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered:
                      - Calculated Column 1: '{{ currentRow.attributes.type }}'
                - showClearSelection: true
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - attributes
                    - type
                    - Name
                    - Retool_Org_SID__c
                    - Id
                    - Email
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            style:
              ordered: []
            position2:
              position2:
                container: form1
                row: 2
                height: 6
                width: 12
            mobilePosition2:
              position2:
                container: form1
                row: 2
                height: 8
                width: 8
            createdAt: 2020-02-14T20:18:24.715Z
      - companyNameTransformer:
          pluginTemplate:
            id: companyNameTransformer
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: |-
                    name = {{ textinput8.value }}
                    length = 20
                    ending = '...'
                    if (name.length > length) {
                      return name.substring(0, length - ending.length) + ending;
                    } else {
                      return name;
                    }
                - value: ''
            createdAt: 2020-02-14T20:21:25.403Z
      - deploymentsTransformer:
          pluginTemplate:
            id: deploymentsTransformer
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: |-
                    if ({{table1.selectedRow.data}} == null) { 
                      return "All"
                    } else { 
                      return {{table1.selectedRow.data.name}}
                    }
                - value: ''
            createdAt: 2020-02-14T20:34:52.027Z
      - textinput8:
          pluginTemplate:
            id: textinput8
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - validatonType: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{ table6.selectedRow.data.attributes.type == 'Opportunity'
                    ? table6.selectedRow.data.Name : ''}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: Add company name
                - validationType: regexp
                - label: Company Name *
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: form1
                row: 8
                height: 1
                width: 12
            mobilePosition2:
              position2:
                container: form1
                row: 10
                col: 8
                height: 1
                width: 4
            createdAt: 2020-02-14T22:15:23.424Z
      - textinput9:
          pluginTemplate:
            id: textinput9
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - validatonType: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{table6.selectedRow.data.Retool_Org_SID__c}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Retool Org SID
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: form1
                row: 9
                height: 1
                width: 12
            mobilePosition2:
              position2:
                container: form1
                row: 10
                height: 1
                width: 4
            createdAt: 2020-02-14T22:52:00.411Z
      - textinput10:
          pluginTemplate:
            id: textinput10
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - validatonType: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{ table6.selectedRow.data.Id }}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Salesforce ID
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: form1
                row: 11
                height: 1
                width: 12
            mobilePosition2:
              position2:
                container: form1
                row: 11
                col: 8
                height: 1
                width: 4
            createdAt: 2020-02-14T23:57:47.764Z
      - textinput11:
          pluginTemplate:
            id: textinput11
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - validatonType: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{table6.selectedRow.data.attributes.type}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Salesforce Type
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: form1
                row: 10
                height: 1
                width: 12
            mobilePosition2:
              position2:
                container: form1
                row: 10
                height: 1
                width: 4
            createdAt: 2020-02-15T00:12:07.322Z
      - salesforceLeadsAndOpps:
          pluginTemplate:
            id: salesforceLeadsAndOpps
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: |-
                    // attributes, Id, Name, Email, Retool_Org_SID__c
                    var leads = {{ getSalesforceLeads.data }};
                    var opps = {{ getSalesforceOpportunities.data }};
                    return opps.concat(leads).map(
                      item => { 
                        return {attributes: item.attributes, type: item.attributes.type, Id: item.Id, Name: item.Name, Email: item.Email, Retool_Org_SID__c: item.Retool_Org_SID__c }
                      }
                    )
                - value: ''
            createdAt: 2020-02-15T01:07:39.542Z
      - textinput12:
          pluginTemplate:
            id: textinput12
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - validatonType: ''
                - hidden: '{{!searchToggle.value}}'
                - currencyType: USD
                - leftIconName: ''
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: Search deployments
                - validationType: regexp
                - label: ''
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: container3
                col: 9
                height: 1
                width: 3
            createdAt: 2020-02-18T19:31:26.600Z
      - searchToggle:
          pluginTemplate:
            id: searchToggle
            type: widget
            subtype: ToggleWidget
            template:
              ordered:
                - hidden: ''
                - toggleOffQuery: ''
                - toggleType: default
                - tooltipText: >-
                    If you can't find the company above, toggle me and search
                    instead.
                - value: 'false'
                - style:
                    ordered: []
                - label: 'search:'
                - toggleOnQuery: ''
                - labelMaxWidth: ''
                - labelPlacedOnLeft: false
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                container: container3
                col: 6
                height: 1
                width: 1
            createdAt: 2020-02-18T19:44:09.588Z
      - modal1:
          pluginTemplate:
            id: modal1
            type: widget
            subtype: ModalWidget
            template:
              ordered:
                - buttonBackgroundColor: '#3c92dc'
                - opened: false
                - modalOverflowType: visible
                - onModalClose: ''
                - modalHeightType: auto
                - tooltipText: ''
                - style:
                    ordered: []
                - buttonColor: white
                - modalHeight: ''
                - onModalOpen: ''
                - modalWidth: ''
                - closeOnOutsideClick: false
                - loading: ''
                - disabled: ''
                - buttonText: Instructions
            style:
              ordered: []
            position2:
              position2:
                col: 3
                height: 1
                width: 1
            createdAt: 2020-02-19T22:37:30.396Z
      - text15:
          pluginTemplate:
            id: text15
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >-
                    Didn't find the company you were looking for in the License
                    DB? 


                    Add it with the form below. If there is a Salesforce Lead or
                    Opportunity those should be used as a starting point with
                    the search box above in order to tie the sid, if one exists,
                    to the company and license keys.
                - style:
                    ordered: []
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: form1
                height: 2
                width: 12
            createdAt: 2020-02-26T18:16:12.285Z
      - container3:
          pluginTemplate:
            id: container3
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - style:
                    ordered: []
                - backgroundColor: white
                - title: ''
                - overflowType: visible
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 8
                col: 4
                height: 8
                width: 8
            createdAt: 2020-02-26T18:37:37.145Z
      - licenseKeyFormTransformer:
          pluginTemplate:
            id: licenseKeyFormTransformer
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: |-
                    if ({{table1.selectedRow.data}} == null) { 
                      return '-select a company-'
                    } else { 
                      return {{table1.selectedRow.data.name}}
                    }
                - value: ''
            createdAt: 2020-02-26T18:45:14.632Z
      - text16:
          pluginTemplate:
            id: text16
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '### Airgapped Deployment Settings'
                - style:
                    ordered: []
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            style:
              ordered: []
            position2:
              position2:
                container: container2
                height: 1
                width: 8
            createdAt: 2020-03-02T21:27:34.909Z
      - button10:
          pluginTemplate:
            id: button10
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: '{{ table2.selectedRow.data.license_key}}'
                - color: '#555555'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: copy-to-clipboard
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Copy license key
                - style:
                    ordered:
                      - accent-background: '#555555ff'
                      - accent-background-light: '#6e6e6eff'
                      - accent-background-lightest: '#6e6e6e66'
                      - accent-background-dark: '#222222ff'
                      - highlight-background: '#55555524'
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: copyToClipboard
                        - type: util
                        - pluginId: ''
                        - waitType: debounce
                        - waitMs: '0'
                        - params:
                            ordered:
                              - value: '{{ table2.selectedRow.data.license_key}}'
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered:
                - accent-background: '#555555ff'
                - accent-background-light: '#6e6e6eff'
                - accent-background-lightest: '#6e6e6e66'
                - accent-background-dark: '#222222ff'
                - highlight-background: '#55555524'
            position2:
              position2:
                container: container1
                col: 9
                height: 1
                width: 3
            createdAt: 2020-04-13T15:41:04.685Z
      - container4:
          pluginTemplate:
            id: container4
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - style:
                    ordered: []
                - backgroundColor: white
                - title: ''
                - overflowType: visible
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 40
                height: 17
                width: 12
            createdAt: 2020-08-07T20:21:14.647Z
      - modal2:
          pluginTemplate:
            id: modal2
            type: widget
            subtype: ModalWidget
            template:
              ordered:
                - buttonBackgroundColor: '#3c92dc'
                - opened: false
                - modalOverflowType: visible
                - onModalClose: ''
                - modalHeightType: fixed
                - tooltipText: ''
                - style:
                    ordered: []
                - modalHeight: ''
                - onModalOpen: ''
                - modalWidth: ''
                - closeOnOutsideClick: false
                - loading: ''
                - disabled: ''
                - buttonText: Search by key
            style:
              ordered: []
            position2:
              position2:
                col: 9
                height: 1
                width: 2
            createdAt: 2020-09-07T02:57:03.027Z
      - textinput13:
          pluginTemplate:
            id: textinput13
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - showNumberCommas: false
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: Search here...
                - validationType: ''
                - label: License key
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - lastSubmittedAt: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: modal2
                height: 1
                width: 12
            createdAt: 2020-09-07T02:57:19.832Z
      - jsonexplorer1:
          pluginTemplate:
            id: jsonexplorer1
            type: widget
            subtype: JSONExplorerWidget
            template:
              ordered:
                - value: '{{searchForLicenseKey.data}}'
                - html: false
                - expandNodes: true
                - style:
                    ordered: []
            style:
              ordered: []
            position2:
              position2:
                container: modal2
                row: 1
                height: 10
                width: 12
            createdAt: 2020-09-07T02:59:18.976Z
      - container5:
          pluginTemplate:
            id: container5
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - style:
                    ordered: []
                - backgroundColor: white
                - title: ''
                - id: container5
                - overflowType: visible
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 27
                height: 13
                width: 4
            createdAt: 2020-11-10T19:16:36.951Z
      - text17:
          pluginTemplate:
            id: text17
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >-
                    ### Override a feature flag for {{
                    licenseKeyFormTransformer.value }}


                    For on-premise (non-airgapped) deployments you can override
                    the value of any feature flag.This will take effect when the
                    next license check occurs.
                - style:
                    ordered: []
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
                - id: text17
            style:
              ordered: []
            position2:
              position2:
                container: container5
                height: 2
                width: 12
            createdAt: 2020-11-10T19:20:14.234Z
      - select2:
          pluginTemplate:
            id: select2
            type: widget
            subtype: SelectWidget
            template:
              ordered:
                - enableClientSideMatching: true
                - values: '{{ getExperimentValues.value}}'
                - allowOutOfRangeValues: true
                - enableFuzzyMatching: true
                - searchValue: ''
                - showFetchingIndicator: true
                - enableCaseSensitivity: false
                - validationMessage: ''
                - displayValue: ''
                - tooltipText: ''
                - value: ''
                - style:
                    ordered: []
                - maxResults: '100'
                - placeholder: ''
                - label: Feature flag
                - clearValueOnFocus: true
                - labelMaxWidth: ''
                - labelPlacedOnLeft: false
                - validationState: ''
                - id: select2
                - onSelect: ''
                - allowCustomValues: false
                - disabled: ''
                - hideClearButton: false
                - required: false
                - labels: ''
            style:
              ordered: []
            position2:
              position2:
                container: container5
                row: 2
                height: 2
                width: 12
            createdAt: 2020-11-10T19:21:48.503Z
      - toggle3:
          pluginTemplate:
            id: toggle3
            type: widget
            subtype: ToggleWidget
            template:
              ordered:
                - toggleOffQuery: ''
                - toggleType: default
                - tooltipText: ''
                - value: 'true'
                - style:
                    ordered: []
                - label: Flag is enabled
                - toggleOnQuery: ''
                - labelMaxWidth: ''
                - labelPlacedOnLeft: false
                - id: toggle3
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                container: container5
                row: 4
                height: 1
                width: 12
            createdAt: 2020-11-10T19:22:01.189Z
      - button11:
          pluginTemplate:
            id: button11
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Set feature flag
                - style:
                    ordered: []
                - exportQuery: ''
                - action: upsertFeatureFlagOverride
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: upsertFeatureFlagOverride
                        - waitType: debounce
                        - waitMs: '0'
                - id: button11
                - exportFileName: ''
                - loading: ''
                - disabled: '{{!select2.value || !table2.selectedRow.data.id}}'
            style:
              ordered: []
            position2:
              position2:
                container: container5
                row: 5
                height: 1
                width: 6
            createdAt: 2020-11-10T19:22:40.389Z
      - text18:
          pluginTemplate:
            id: text18
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '**Currently overriden feature flags**'
                - style:
                    ordered: []
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
                - id: text18
            style:
              ordered: []
            position2:
              position2:
                container: container5
                row: 6
                height: 1
                width: 12
            createdAt: 2020-11-10T19:22:58.665Z
      - table7:
          pluginTemplate:
            id: table7
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths: []
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered:
                      - feature_flag_name: Flag name
                      - is_active: Is enabled
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - id: ''
                      - deployment_id: ''
                      - feature_flag_name: ''
                      - is_active: ''
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: false
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - id: false
                      - deployment_id: false
                      - feature_flag_name: true
                      - is_active: true
                      - Title: true
                      - Description: true
                      - Sales: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{ getFeatureFlagOverridesForDeployment.data }}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - showRefreshButton: true
                - pageSize: 5
                - useDynamicColumnSettings: false
                - style:
                    ordered: []
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: false
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - id: table7
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - Title
                    - Description
                    - Sales
                    - id
                    - deployment_id
                    - feature_flag_name
                    - is_active
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            style:
              ordered: []
            position2:
              position2:
                container: container5
                row: 7
                height: 5
                width: 12
            createdAt: 2020-11-10T19:37:31.645Z
      - button13:
          pluginTemplate:
            id: button13
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#e9ab11'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: >-
                    Remove feature flag override for
                    {{table7.selectedRow.data.feature_flag_name}}
                - style:
                    ordered:
                      - accent-background: '#e9ab11'
                - exportQuery: ''
                - action: deleteFeatureFlagOverride
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: trigger
                        - type: datasource
                        - pluginId: deleteFeatureFlagOverride
                        - waitType: debounce
                        - waitMs: '0'
                - id: button13
                - exportFileName: ''
                - loading: ''
                - disabled: '{{!table7.selectedRow.data}}'
            style:
              ordered:
                - accent-background: '#e9ab11'
            position2:
              position2:
                container: container5
                row: 5
                col: 6
                height: 1
                width: 6
            createdAt: 2020-11-10T19:47:09.750Z
      - button14:
          pluginTemplate:
            id: button14
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: '{{ btoa(table2.selectedRow.data.license_key)}}'
                - color: '#9C76C1'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: copy-to-clipboard
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Copy base64 license key (k8s)
                - style:
                    ordered:
                      - accent-background: '#9C76C1'
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: copyToClipboard
                        - type: util
                        - pluginId: ''
                        - waitType: debounce
                        - waitMs: '0'
                        - params:
                            ordered:
                              - value: '{{ btoa(table2.selectedRow.data.license_key)}}'
                - id: button14
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered:
                - accent-background: '#9C76C1'
            position2:
              position2:
                container: container1
                row: 1
                col: 9
                height: 1
                width: 3
            createdAt: 2020-11-18T21:31:53.974Z
      - text19:
          pluginTemplate:
            id: text19
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: center
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |-
                    ## ```{{ 
                    table2.selectedRow.data.license_key}}```
                - style:
                    ordered:
                      - primary-text: '#9C76C1'
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#9C76C1'
                - renderAsMarkdown: true
                - id: text19
            style:
              ordered:
                - primary-text: '#9C76C1'
            position2:
              position2:
                container: container1
                row: 1
                height: 1
                width: 9
            createdAt: 2020-11-19T01:22:39.029Z
      - button15:
          pluginTemplate:
            id: button15
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: url
                - exportTemplate: null
                - url: >-
                    https://admin.retool.dev/apps/Sales/Airgapped%20Key%20Checker#key={{
                    _.get(getOnPremKey, 'data.payload').replace(/\n/g, ' ') +
                    '|' + _.get(getOnPremKey, 'data.signature').replace(/\n/g, '
                    ').trim()}}
                - newWindow: true
                - value: Open Key Checker App
                - style:
                    ordered:
                      - accent-background: '#f4a125ff'
                      - accent-background-light: '#f6b656ff'
                      - accent-background-lightest: '#f6b65666'
                      - accent-background-dark: '#aa6909ff'
                      - highlight-background: '#f4a12524'
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: openUrl
                        - type: util
                        - pluginId: ''
                        - waitType: debounce
                        - waitMs: '0'
                        - params:
                            ordered:
                              - url: >-
                                  https://admin.retool.dev/apps/Sales/Airgapped%20Key%20Checker#key={{
                                  _.get(getOnPremKey,
                                  'data.payload').replace(/\n/g, ' ') + '|' +
                                  _.get(getOnPremKey,
                                  'data.signature').replace(/\n/g, ' ').trim()}}
                              - options:
                                  ordered:
                                    - newTab: true
                - id: button15
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered:
                - accent-background: '#f4a125ff'
                - accent-background-light: '#f6b656ff'
                - accent-background-lightest: '#f6b65666'
                - accent-background-dark: '#aa6909ff'
                - highlight-background: '#f4a12524'
            position2:
              position2:
                container: container2
                row: 16
                col: 6
                height: 1
                width: 6
            createdAt: 2021-02-02T19:00:54.792Z
      - text20:
          pluginTemplate:
            id: text20
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >-
                    ```{{composeOfflineLicenseKey.value || "Key will be
                    generated here"}}```
                - style:
                    ordered: []
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
                - id: text20
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 11
                height: 5
                width: 5
            createdAt: 2021-03-11T04:27:13.410Z
      - button16:
          pluginTemplate:
            id: button16
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: '{{ composeOfflineLicenseKey.value}}'
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: copy-to-clipboard
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - tooltipText: Copies to clipboard
                - value: Copy Offline License Key
                - style:
                    ordered:
                      - accent-background: '#75a385ff'
                      - accent-background-light: '#94b7a0ff'
                      - accent-background-lightest: '#94b7a066'
                      - accent-background-dark: '#476b54ff'
                      - highlight-background: '#75a38524'
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: copyToClipboard
                        - type: util
                        - pluginId: ''
                        - waitType: debounce
                        - waitMs: '0'
                        - params:
                            ordered:
                              - value: '{{ composeOfflineLicenseKey.value}}'
                - id: button16
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered:
                - accent-background: '#75a385ff'
                - accent-background-light: '#94b7a0ff'
                - accent-background-lightest: '#94b7a066'
                - accent-background-dark: '#476b54ff'
                - highlight-background: '#75a38524'
            position2:
              position2:
                container: container2
                row: 15
                col: 6
                height: 1
                width: 6
            createdAt: 2021-03-11T04:30:45.357Z
      - button17:
          pluginTemplate:
            id: button17
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: url
                - exportTemplate: null
                - url: >-
                    https://admin.retool.dev/apps/Admins%20ONLY/Airgapped%20Deployments
                - newWindow: true
                - tooltipText: Opens app in admin
                - value: View All Airgapped Deployments
                - style:
                    ordered: []
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: openUrl
                        - type: util
                        - pluginId: ''
                        - waitType: debounce
                        - waitMs: '0'
                        - params:
                            ordered:
                              - url: >-
                                  https://admin.retool.dev/apps/Admins%20ONLY/Airgapped%20Deployments
                              - options:
                                  ordered:
                                    - newTab: true
                - id: button17
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                container: container2
                col: 8
                height: 1
                width: 4
            createdAt: 2021-03-11T04:36:49.551Z
      - button18:
          pluginTemplate:
            id: button18
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: url
                - exportTemplate: null
                - url: >-
                    https://paper.dropbox.com/doc/Airgapped-Retool--AulVqfigQ6k3FDQOtELM~fBfAg-VzVMBaCQhAM9Si2NkLxIC#:uid=331507899787957680158696&h2=How-to-create-an-airgapped-lic
                - newWindow: true
                - tooltipText: Not sure how to use this?
                - value: View the Docs on this tool
                - style:
                    ordered: []
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: openUrl
                        - type: util
                        - pluginId: ''
                        - waitType: debounce
                        - waitMs: '0'
                        - params:
                            ordered:
                              - url: >-
                                  https://paper.dropbox.com/doc/Airgapped-Retool--AulVqfigQ6k3FDQOtELM~fBfAg-VzVMBaCQhAM9Si2NkLxIC#:uid=331507899787957680158696&h2=How-to-create-an-airgapped-lic
                              - options:
                                  ordered:
                                    - newTab: true
                - id: button18
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 1
                col: 8
                height: 1
                width: 4
            createdAt: 2021-03-11T04:37:34.773Z
      - composeOfflineLicenseKey:
          pluginTemplate:
            id: composeOfflineLicenseKey
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: >-
                    return {{ _.get(getOnPremKey, 'data.payload').replace(/\n/g,
                    ' ') + '|' + _.get(getOnPremKey,
                    'data.signature').replace(/\n/g, ' ').trim()}}
                - value: ''
            createdAt: 2021-03-11T04:42:06.681Z
      - button19:
          pluginTemplate:
            id: button19
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: export
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - tooltipText: We don't support downloading txt files!
                - value: Download Offline License Key as Text File
                - style:
                    ordered: []
                - exportQuery: '{{ composeOfflineLicenseKey.value}}'
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - method: exportData
                        - type: util
                        - pluginId: ''
                        - waitType: debounce
                        - waitMs: '0'
                        - params:
                            ordered:
                              - data: '{{ composeOfflineLicenseKey.value}}'
                              - fileName: offline_key.txt
                              - fileType: csv
                              - options:
                                  ordered: []
                - id: button19
                - exportFileName: offline_key.txt
                - loading: ''
                - disabled: 'true'
            style:
              ordered: []
            position2:
              position2:
                container: container2
                row: 14
                col: 6
                height: 1
                width: 6
            createdAt: 2021-03-11T04:44:10.495Z
      - text21:
          pluginTemplate:
            id: text21
            type: widget
            subtype: TextWidget2
            template:
              ordered:
                - heightType: auto
                - horizontalAlign: left
                - hidden: false
                - imageWidth: fit
                - verticalAlign: center
                - tooltipText: ''
                - value: >-
                    #### License Key App

                    Currently selected key for company:
                    **{{table1.selectedRow.data.name}}**
                - style:
                    ordered:
                      - color: '#f5f5f5ff'
                - disableMarkdown: false
                - overflowType: scroll
            style:
              ordered: []
            position2:
              position2:
                subcontainer: header
                height: 1
                width: 11
            createdAt: 2021-04-17T21:29:04.080Z
      - $header:
          pluginTemplate:
            id: $header
            type: frame
            subtype: Frame
            template:
              ordered:
                - type: header
                - sticky: true
                - style:
                    ordered:
                      - primary-surface: '#333333ff'
                      - primary-text: '#ffffffff'
            style:
              ordered: []
            createdAt: 2021-04-17T21:31:59.308Z
      - text23:
          pluginTemplate:
            id: text23
            type: widget
            subtype: TextWidget2
            template:
              ordered:
                - heightType: auto
                - horizontalAlign: left
                - hidden: false
                - imageWidth: fit
                - verticalAlign: center
                - tooltipText: ''
                - value: >
                    **Step 1** : Search for the Company you’d like to generate a
                    license key for


                    **Step 2**: You shouldn’t see the company appear in the
                    “Companies in the License DB” table, but if you do, that
                    means this company already has a license key or were given
                    one in the past. It probably means you should look into the
                    situation and make sure you’re caught up on all previous
                    context


                    **Step 3**: Find the opportunity tied to the Company in the
                    table below the search input. If there is no opportunity
                    there, you’ll probably want to create the opportunity first.
                    For edge cases where there is no opportunity associated yet
                    to the on-prem deploy, it’s OK to tie the license key to a
                    lead associated to the company


                    **Step 4**: Hit the “Add [opp name] to companies” button.
                    Note: this does not create a license key for them, but just
                    adds them to our DB of companies that have/will have a
                    license key


                    **Step 5**: In the table below, press “Generate Key” and
                    then add the expiration date for the key, their company
                    domain name, and the license type. You’ll most likely be
                    picking the “trial” option for the license type.


                    **Step 6**: Press Create Deployment — this now actually
                    creates a valid license key


                    **Step 7**: Now in the middle of your screen you’ll see the
                    prospect’s license key, expiration date, and other useful
                    information. Feel free to press the “copy license key”
                    button and send it their way!



                    **Notes**:



                    - If the prospect is deploying on Kubernetes, they’ll need
                    their license key base64 encoded. Luckily, there’s a button
                    right underneath “copy license key” to create a base64
                    encoded version of it

                    - Steps 5 onwards to do not apply to Air-gapped deployments,
                    which follow a slightly different method. See here for
                    instructions on how to generate a license key for an
                    air-gapped deployment
                - style:
                    ordered: []
                - disableMarkdown: false
                - overflowType: scroll
            style:
              ordered: []
            position2:
              position2:
                container: modal1
                height: 1
                width: 11
            createdAt: 2021-04-29T21:55:27.724Z
      - button20:
          pluginTemplate:
            id: button20
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Copy customer instructions
                - style:
                    ordered:
                      - accent-background: rgba(95, 82, 244, 1)
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - type: util
                        - method: copyToClipboard
                        - pluginId: ''
                        - params:
                            ordered:
                              - value: >-
                                  I just extended the license key for you. The
                                  banner should go away in the next ~6 hours. If
                                  it doesn't you can also restart the Retool
                                  container (or upgrade to the latest version),
                                  which will force a license refresh and it will
                                  disappear. 
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                container: container1
                row: 4
                col: 9
                height: 1
                width: 3
            createdAt: 2021-06-09T04:20:08.510Z
      - getExperimentValues:
          pluginTemplate:
            id: getExperimentValues
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: >-
                    //  __  __     ______     __         ______     ______    

                    // /\ \_\ \   /\  ___\   /\ \       /\  __ \   /\  __ \   

                    // \ \  __ \  \ \  __\   \ \ \____  \ \ \/\ \  \ \ \/\ \  

                    //  \ \_\ \_\  \ \_____\  \ \_____\  \ \_____\  \ \_____\ 

                    //   \/_/\/_/   \/_____/   \/_____/   \/_____/   \/_____/ 

                    //

                    // Want to update this?

                    // Please try this app:
                    https://admin.retool.dev/apps/kent/Feature%20Flag%20Experiment%20Updater

                    // Or talk to Kent (kent@retool.com)


                    return
                    ["foo","useCachedModelJS","batchSandbox","reusableQueries","approvalWorkflows","organizationThemingForNonEnterprisePlan","plotlyChartsWidget","flows","shell","unifiedSqlPostgres","unifiedSqlMySQL","unifiedSqlMSSQL","unifiedSqlCassandra","unifiedSqlSnowflake","unifiedSqlRedshift","modules","showDiffInReleases","instrumentation","registrationsSkipOrgCreation","googleSheetsUnformattedValues","previewPanelOnRun","styling","googleSheetsBulkUpdate","queryFailureConditions","layoutImprovements","styleEditors","sapHana","destroyInactiveTab","undpeclaredV2","firebaseRawQuery","stripeBillingUpgrade","testExperiment","appSpecificJS","selfServiceOnPrem","smtpResource","newSuggestModal","selfServiceOnPremCTA","sandboxBundleSizeReduction","openAPIEditorV2","permissionsV2","dynamicContainers","datadogIntegration","jiraIntegration","appShell","bigidIntegration","googleAnalyticsIntegration","newPermissionsCheck","folderDefaults","appsUsingResources","plotlyGA","v2TextWidget","launchdarklyIntegration","frontIntegration","handleRestResourceNullsCorrectly","pageDocumentation","retoolPill","oneSignalIntegration","deprecatedComponents","appStyles",
                    "resetBranch", 'testingInterface', 'popoutCodeEditor',
                    "appShellOrgSettings","performanceDashboard"]
                - value: ''
            createdAt: 2021-06-15T21:53:19.746Z
  urlFragmentDefinitions:
    - ordered:
        - name: company
        - value: '{{textinput1.value}}'
  appStyles: ''
  appThemeId: null
  preloadedAppJavaScript: ''
  pageLoadValueOverrides:
    - ordered:
        - name: textinput1.value
        - value: '{{urlparams.hash.company}}'
  customDocumentTitle: ''
  isGlobalWidget: false
  isFetching: true
  instrumentationEnabled: false
  customDocumentTitleEnabled: false
  preloadedAppJSLinks:
    array: []
  version: 2.68.24
  responsiveLayoutDisabled: false
  createdAt: null
  customShortcuts:
    array: []
  loadingIndicatorsDisabled: false
