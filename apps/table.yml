version: 43.0.9
pageUuid: 1faf29a0-15f7-11ea-8913-cb19a3d27bd3
appTemplate:
  plugins:
    ordered:
      - time:
          pluginTemplate:
            id: time
            type: state
            subtype: State
            template:
              ordered:
                - value: null
            createdAt: 2021-03-09T20:36:06.729Z
      - testQuery:
          pluginTemplate:
            id: testQuery
            type: datasource
            subtype: RESTQuery
            resourceName: Mark Auth0 Test (postman-echo)
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: >-
                    [{"key":"test","value":"data"},{"key":"test2","value":"data2"}]
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: post/
                - playgroundQueryUuid: 802fa2a1-21fa-48b0-b455-b8e774454fc6
                - playgroundQueryId: 70909
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: true
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: POST
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: json
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-03-30T17:37:33.789Z
      - query5:
          pluginTemplate:
            id: query5
            type: datasource
            subtype: RESTQuery
            resourceName: REST-WithoutResource
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: >-
                    https://retoolin.tryretool.com/embedded/public/87e7c59c-b09e-4c9e-9ef5-53f4d6937aa1
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: GET
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: json
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-03-30T19:58:12.312Z
      - query6:
          pluginTemplate:
            id: query6
            type: datasource
            subtype: GraphQLQuery
            resourceName: testgraphql
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: >+
                    # GraphQL queries typically start with a "{" character.
                    Lines that start

                    # with a # are ignored.

                    #

                    # An example GraphQL query might look like:

                    #

                    #     {

                    #       field(arg: "value") {

                    #         subField

                    #       }

                    #     }

                    #

                    # Keyboard shortcuts:

                    #

                    #   Auto Complete:  Ctrl-Space (or just start typing)

                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - graphQLVariables: '[]'
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    //Use the variables data, metadata, and errors to reference
                    these fields from your query's results

                    if (Array.isArray(errors) && errors.length > 0) {
                      return errors[0].message;
                    } else {
                      return false
                    }
                        
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - graphQLErrors: null
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: POST
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: raw
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-04-06T18:50:33.053Z
      - query8:
          pluginTemplate:
            id: query8
            type: datasource
            subtype: RESTQuery
            resourceName: e492547e-1ccf-4b27-adb2-5446ba07d73e
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: ''
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: GET
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: json
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-04-08T22:14:29.958Z
      - query11:
          pluginTemplate:
            id: query11
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: return (query11.data || 0 )+1
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-04-12T22:50:43.984Z
      - query9:
          pluginTemplate:
            id: query9
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    async function getData() {
                      await query11.trigger();
                      return query11.data;
                    }

                    return getData()
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: true
                - notificationDuration: ''
            createdAt: 2021-04-12T17:02:04.703Z
      - query10:
          pluginTemplate:
            id: query10
            type: datasource
            subtype: SqlQueryUnified
            resourceName: Postgres (Testing) Prepared Statements Disabled
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: select * from tags
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - metadata: null
                - editorMode: sql
                - actionType: ''
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-04-12T22:50:41.219Z
      - query12:
          pluginTemplate:
            id: query12
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    for (x=0;x<100;x++){
                      query2.trigger()
                    }
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure:
                    - query11
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: failure
                        - type: datasource
                        - method: trigger
                        - pluginId: query11
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-04-15T19:48:11.491Z
      - $header:
          pluginTemplate:
            id: $header
            type: frame
            subtype: Frame
            template:
              ordered:
                - type: header
                - sticky: false
            style:
              ordered: []
            createdAt: 2021-05-05T02:42:11.249Z
      - getPDFQuery:
          pluginTemplate:
            id: getPDFQuery
            type: datasource
            subtype: RESTQuery
            resourceName: REST-WithoutResource
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: >-
                    https://actions.blob.core.windows.net/data-storage/2021-05-10_ojoesaob.3nk.pdf?sv=2020-04-08&se=2021-05-10T18%3A31%3A57Z&sr=b&sp=r&rscd=inline%3Bfilename%3D%22Quote.pdf%22&sig=zI3E72fuSFRxavalu6u5yvst%2B5JxnSNVr5Z85FtAJow%3D
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: GET
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: json
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-05-10T16:53:05.200Z
      - changeDynamicValue:
          pluginTemplate:
            id: changeDynamicValue
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    const root = arguments[0]
                    let thing = root[triggeredById];
                    if (Object.getOwnPropertyNames(thing).includes('setValue')){
                       root[triggeredById].setValue("Aha!")
                    }
                    if (thing.pluginType == "SelectWidget"){
                      root[triggeredById].setValue("Aha!")
                    }
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: true
                - notificationDuration: ''
            createdAt: 2021-05-14T02:10:54.736Z
      - query13:
          pluginTemplate:
            id: query13
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    const f = []
                    f.push("hi") 
                    f.push("hi") 
                    f.push("hi")
                    return f
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: true
                - notificationDuration: ''
            createdAt: 2021-05-30T18:36:54.742Z
      - state1:
          pluginTemplate:
            id: state1
            type: state
            subtype: State
            template:
              ordered:
                - value: ''
            createdAt: 2021-05-31T15:17:00.981Z
      - transformer1:
          pluginTemplate:
            id: transformer1
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: >-
                    // Tip: assign your external references to variables instead
                    of chaining off the curly brackets. 

                     return 5
                - value: ''
            createdAt: 2021-06-09T23:42:33.449Z
      - navigation1:
          pluginTemplate:
            id: navigation1
            type: widget
            subtype: NavigationWidget
            template:
              ordered:
                - horizontalAlign: right
                - valueToCopy: ''
                - menuItems:
                    - ordered:
                        - title: Menu item 1
                        - hidden: ''
                        - clickable:
                            ordered:
                              - valueToCopy: ''
                              - internalUrlHashParams: ''
                              - exportFileType: csv
                              - buttonType: action
                              - exportTemplate: null
                              - url: ''
                              - newWindow: false
                              - exportQuery: ''
                              - action: query10
                              - internalUrlQuery: ''
                              - internalUrlPath: ''
                              - exportFileName: ''
                              - disabled: ''
                        - menuItems:
                            - ordered:
                                - title: Submenu item 1
                                - clickable:
                                    ordered:
                                      - valueToCopy: ''
                                      - internalUrlHashParams: ''
                                      - exportFileType: csv
                                      - buttonType: action
                                      - exportTemplate: null
                                      - url: ''
                                      - newWindow: false
                                      - exportQuery: ''
                                      - action: ''
                                      - internalUrlQuery: ''
                                      - internalUrlPath: ''
                                      - exportFileName: ''
                                      - disabled: ''
                                - hidden: ''
                                - menuItems: []
                            - ordered:
                                - title: Submenu item 2
                                - clickable:
                                    ordered:
                                      - valueToCopy: ''
                                      - internalUrlHashParams: ''
                                      - exportFileType: csv
                                      - buttonType: action
                                      - exportTemplate: null
                                      - url: ''
                                      - newWindow: false
                                      - exportQuery: ''
                                      - action: ''
                                      - internalUrlQuery: ''
                                      - internalUrlPath: ''
                                      - exportFileName: ''
                                      - disabled: ''
                                - hidden: ''
                                - menuItems: []
                            - ordered:
                                - title: Submenu item 3
                                - clickable:
                                    ordered:
                                      - valueToCopy: ''
                                      - internalUrlHashParams: ''
                                      - exportFileType: csv
                                      - buttonType: action
                                      - exportTemplate: null
                                      - url: ''
                                      - newWindow: false
                                      - exportQuery: ''
                                      - action: ''
                                      - internalUrlQuery: ''
                                      - internalUrlPath: ''
                                      - exportFileName: ''
                                      - disabled: ''
                                - hidden: ''
                                - menuItems: []
                    - ordered:
                        - title: Menu item 2
                        - clickable:
                            ordered:
                              - valueToCopy: ''
                              - internalUrlHashParams: ''
                              - exportFileType: csv
                              - buttonType: action
                              - exportTemplate: null
                              - url: ''
                              - newWindow: false
                              - exportQuery: ''
                              - action: ''
                              - internalUrlQuery: ''
                              - internalUrlPath: ''
                              - exportFileName: ''
                              - disabled: ''
                        - hidden: ''
                        - menuItems: []
                    - ordered:
                        - title: Menu item 3
                        - clickable:
                            ordered:
                              - valueToCopy: ''
                              - internalUrlHashParams: ''
                              - exportFileType: csv
                              - buttonType: action
                              - exportTemplate: null
                              - url: ''
                              - newWindow: false
                              - exportQuery: ''
                              - action: ''
                              - internalUrlQuery: ''
                              - internalUrlPath: ''
                              - exportFileName: ''
                              - disabled: ''
                        - hidden: ''
                        - menuItems: []
                    - ordered:
                        - title: Menu item 4
                        - clickable:
                            ordered:
                              - valueToCopy: ''
                              - internalUrlHashParams: ''
                              - exportFileType: csv
                              - buttonType: action
                              - exportTemplate: null
                              - url: ''
                              - newWindow: false
                              - exportQuery: ''
                              - action: ''
                              - internalUrlQuery: ''
                              - internalUrlPath: ''
                              - exportFileName: ''
                              - disabled: ''
                        - hidden: ''
                        - menuItems: []
                - srcFromUrl: true
                - internalUrlHashParams: ''
                - exportFileType: csv
                - logoImageFile: ''
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - style:
                    ordered:
                      - primary-surface: '#c74438ff'
                      - border-color: '#262626b3'
                      - primary-text: '#262626ff'
                      - accent-background: '#67aae4ff'
                - logoImageSrc: ''
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                subcontainer: header
                height: 1
                width: 12
            createdAt: 2021-06-28T18:59:50.783Z
      - rangeslider1:
          pluginTemplate:
            id: rangeslider1
            type: widget
            subtype: RangeSliderWidget
            template:
              ordered:
                - hideOutput: false
                - max: 10
                - hidden: false
                - customValidation: ''
                - hideValidationMessage: false
                - step: 1
                - validationMessage: ''
                - tooltipText: ''
                - labelAlign: left
                - value:
                    object:
                      start: 1
                      end: 4
                - min: 0
                - label: Label
                - _validate: false
                - invalid: false
                - disabled: false
                - labelPosition: left
            style:
              ordered: []
            position2:
              position2:
                row: 1.4
                col: 4
                height: 0.6
                width: 3
            createdAt: 2021-07-22T04:22:09.346Z
      - range:
          pluginTemplate:
            id: range
            type: widget
            subtype: RangeSliderWidget
            template:
              ordered:
                - hideOutput: false
                - max: 10
                - hidden: false
                - customValidation: ''
                - hideValidationMessage: false
                - step: '0.25'
                - validationMessage: ''
                - tooltipText: ''
                - labelAlign: left
                - value:
                    ordered:
                      - start: '{{i+1}}'
                      - end: 4
                - min: 0
                - label: Label
                - _validate: false
                - invalid: false
                - disabled: false
                - labelPosition: left
            style:
              ordered: []
            position2:
              position2:
                container: listview1
                col: 2
                height: 0.6
                width: 4
            createdAt: 2021-07-22T04:22:17.121Z
      - listview1:
          pluginTemplate:
            id: listview1
            type: widget
            subtype: ListViewWidget
            template:
              ordered:
                - data: ''
                - instances: '3'
                - itemHeight: '3'
                - scroll: true
                - showBorder: true
                - showDropShadow: true
                - dynamicHeightsEnabled: true
            style:
              ordered: []
            position2:
              position2:
                row: 12
                col: 4
                height: 14
                width: 7
            createdAt: 2021-07-22T04:23:46.116Z
      - query14:
          pluginTemplate:
            id: query14
            type: datasource
            subtype: RESTQuery
            resourceName: REST-WithoutResource
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: >-
                    http://fpos-visibility.dev.nonp-dev-3.use1.eng-nonprod.flexport.internal/integrations/milestonemanager/itinerary/loadevents?containerNumbers=TEST&page=0&pageSize=10
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - cookies: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: GET
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - bodyType: json
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-24T03:12:53.156Z
      - keyvaluemap1:
          pluginTemplate:
            id: keyvaluemap1
            type: widget
            subtype: KeyValueMapWidget
            template:
              ordered:
                - rowHeaderNames:
                    ordered: []
                - rowFormats:
                    ordered: []
                - valueTitle: Value
                - data: |-
                    {
                      "a": 1,
                      "b": 2,
                      "c": 3
                    }
                - rowMappersRenderAsHTML:
                    ordered: []
                - rowVisibility:
                    ordered:
                      - a: true
                      - b: true
                      - c: true
                - rowMappers:
                    ordered: []
                - rows:
                    - a
                    - b
                    - c
                - keyTitle: Key
            style:
              ordered: []
            position2:
              position2:
                row: 26
                col: 7
                height: 5
                width: 2
            createdAt: 2021-07-27T00:45:15.394Z
      - table1:
          pluginTemplate:
            id: table1
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths: []
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered:
                      - id: Hello THere
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - id: red
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - id: true
                      - name: true
                      - email: true
                      - sales: true
                      - Custom Column 1: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: |-
                    [{
                      "id": 1,
                      "name": "Hanson Deck",
                      "email": "hanson@deck.com",
                      "sales": 37
                    }, {
                      "id": 2,
                      "name": "Max Conversation",
                      "email": "Max@conversation.com",
                      "sales": 424
                    }, {
                      "id": 3,
                      "name": "Jason Response",
                      "email": "jason@response.com",
                      "sales": 55
                    }, {
                      "id": 4,
                      "name": "Sue Shei",
                      "email": "sueshei@example.com",
                      "sales": 550
                    }, {
                      "id": 5,
                      "name": "Eric Widget",
                      "email": "eric@widget.org",
                      "sales": 243
                    }]
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - showRefreshButton: true
                - pageSize: 5
                - useDynamicColumnSettings: false
                - style:
                    ordered:
                      - primary-surface: 'rgba(137, 135, 135, 1)'
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - emptyMessage: No rows found
                - columnEditable:
                    ordered:
                      - id: true
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered:
                      - Custom Column 1: TEST
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - id
                    - name
                    - email
                    - sales
                    - Custom Column 1
                - sort: null
                - calculatedColumns:
                    - Custom Column 1
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: false
            style:
              ordered: []
            position2:
              position2:
                row: 31.6
                col: 6
                height: 8
                width: 6
            createdAt: 2021-07-28T16:15:42.642Z
      - button1:
          pluginTemplate:
            id: button1
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Submit
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - events:
                    - ordered:
                        - event: click
                        - type: util
                        - method: openApp
                        - pluginId: ''
                        - params:
                            ordered:
                              - uuid: 392ff4a0-a399-11eb-a096-533542e6839f
                        - waitType: debounce
                        - waitMs: '0'
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            style:
              ordered: []
            position2:
              position2:
                row: 30.6
                col: 10
                height: 1
                width: 2
            createdAt: 2021-07-28T16:26:43.962Z
      - table2:
          pluginTemplate:
            id: table2
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths: []
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered: []
                - columnFrozenAlignments:
                    ordered: []
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - showAddRowButton: false
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - id: true
                      - name: true
                      - email: true
                      - sales: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: |-
                    [{
                      "id": 1,
                      "name": "Hanson Deck",
                      "email": "hanson@deck.com",
                      "sales": 37
                    }, {
                      "id": 2,
                      "name": "Max Conversation",
                      "email": "Max@conversation.com",
                      "sales": 424
                    }, {
                      "id": 3,
                      "name": "Jason Response",
                      "email": "jason@response.com",
                      "sales": 55
                    }, {
                      "id": 4,
                      "name": "Sue Shei",
                      "email": "sueshei@example.com",
                      "sales": 550
                    }, {
                      "id": 5,
                      "name": "Eric Widget",
                      "email": "eric@widget.org",
                      "sales": 243
                    }]
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - showRefreshButton: true
                - pageSize: 5
                - useDynamicColumnSettings: false
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    array: []
                - newRow: null
                - emptyMessage: No rows found
                - columnEditable:
                    ordered: []
                - filters:
                    array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - id
                    - name
                    - email
                    - sales
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: false
            style:
              ordered: []
            position2:
              position2:
                row: 1
                col: 1
                height: 8
                width: 1
            createdAt: 2021-07-29T18:41:46.785Z
      - text1:
          pluginTemplate:
            id: text1
            type: widget
            subtype: TextWidget2
            template:
              ordered:
                - heightType: auto
                - horizontalAlign: left
                - hidden: false
                - imageWidth: fit
                - verticalAlign: center
                - tooltipText: ''
                - value: '{{ moment().valueOf() || table2.selectedRow}}'
                - disableMarkdown: false
                - overflowType: scroll
            style:
              ordered: []
            position2:
              position2:
                row: 0.8
                col: 2
                height: 0.6
                width: 3
            createdAt: 2021-07-29T18:41:53.126Z
      - moduleWithNoUi1:
          pluginTemplate:
            id: moduleWithNoUi1
            type: widget
            subtype: GlobalWidget
            template:
              ordered:
                - showFetchingIndicator: false
                - name: moduleWithNoUi
                - pageUuid: 38174453-ba7a-4205-8eb6-6fef7cc5ffad
                - input1: '{{textinput1.value}}'
                - childNamespace: moduleWithNoUi1
                - output1: '{{output1.value}}'
                - hidden: 'true'
            style:
              ordered: []
            position2:
              position2:
                col: 11
                height: 1
                width: 1
            createdAt: 2021-07-30T01:55:34.087Z
      - textinput1:
          pluginTemplate:
            id: textinput1
            type: widget
            subtype: TextInputWidget2
            template:
              ordered:
                - spellCheck: false
                - iconAfter: ''
                - autoComplete: false
                - maxLength: null
                - hidden: false
                - customValidation: ''
                - patternType: ''
                - hideValidationMessage: false
                - textBefore: ''
                - validationMessage: ''
                - textAfter: ''
                - pattern: ''
                - tooltipText: ''
                - labelAlign: left
                - value: ''
                - autoFill: ''
                - placeholder: Enter value
                - label: '{{moduleWithNoUi1.output1}}'
                - _validate: false
                - invalid: false
                - iconBefore: ''
                - minLength: null
                - autoCapitalize: none
                - disabled: false
                - labelPosition: left
                - required: false
            style:
              ordered: []
            position2:
              position2:
                col: 7
                height: 1
                width: 4
            createdAt: 2021-07-30T01:55:47.295Z
  urlFragmentDefinitions: []
  appStyles: ''
  appThemeId: null
  preloadedAppJavaScript: null
  pageLoadValueOverrides: []
  customDocumentTitle: ''
  isGlobalWidget: false
  isFetching: false
  instrumentationEnabled: false
  customDocumentTitleEnabled: false
  preloadedAppJSLinks:
    array: []
  version: 2.73.5
  responsiveLayoutDisabled: false
  createdAt: null
  loadingIndicatorsDisabled: false
