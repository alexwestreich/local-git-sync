version: 43.0.9
pageUuid: 9f0c6ac0-f47a-11ea-8e4b-ab4968c396fb
appTemplate:
  plugins:
    ordered:
      - getCollections:
          pluginTemplate:
            id: getCollections
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: ''
                - triggersOnSuccess:
                    - getDocuments
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: getCollectionsFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: ''
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: ''
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: false
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-07-29T17:15:00.081Z
      - getDocuments:
          pluginTemplate:
            id: getDocuments
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: '{{ selectCollection.value }}'
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: queryFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: ''
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: ''
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: true
                - firestoreOrderBy: ''
                - requireConfirmation: false
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: '[{"key":"","value":""}]'
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2019-02-20T04:02:23.318Z
      - updateDocument:
          pluginTemplate:
            id: updateDocument
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: Document updated successfully!
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: '{{  selectCollection.value  }}'
                - triggersOnSuccess:
                    - getDocuments
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: updateFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: '{{ documentEditor.value }}'
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: Are you sure you want to update this document?
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{   documentsTable.selectedRow.data._id   }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: true
                - firestoreOrderBy: ''
                - requireConfirmation: true
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2019-02-20T06:29:09.218Z
      - deleteDocument:
          pluginTemplate:
            id: deleteDocument
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: Document deleted successfully!
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: '{{  selectCollection.value  }}'
                - triggersOnSuccess:
                    - getDocuments
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: deleteFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: ''
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: Are you sure you want to delete this document?
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{   documentsTable.selectedRow.data._id   }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: true
                - firestoreOrderBy: ''
                - requireConfirmation: true
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2019-02-20T06:40:56.257Z
      - insertDocument:
          pluginTemplate:
            id: insertDocument
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: '{{  selectCollection.value  }}'
                - triggersOnSuccess:
                    - getDocuments
                    - closeModal
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: setFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: '{{  documentAddEditor.value  }}'
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return "you can't submit this - it's wrong"
                - confirmationMessage: null
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{ idToggle.value ? '''' : idInput.value }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: true
                - firestoreOrderBy: ''
                - requireConfirmation: false
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2019-02-20T06:06:12.222Z
      - filterText:
          pluginTemplate:
            id: filterText
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: right
                - truncateOverflow: false
                - verticalAlign: top
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    Click the filter icon to search ⬆︎
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#9a9a9a'
                - renderAsMarkdown: true
            position2:
              position2:
                container: tabbedcontainer1
                row: 14
                col: 9
                height: 1
                width: 3
            createdAt: 2020-07-29T18:14:05.634Z
      - limit:
          pluginTemplate:
            id: limit
            type: state
            subtype: State
            template:
              ordered:
                - value: 'null'
            createdAt: 2020-07-29T18:31:05.031Z
      - updateLimitState:
          pluginTemplate:
            id: updateLimitState
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - query: limit.setValue(limitInput.value)
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-07-29T18:31:49.503Z
      - closeModal:
          pluginTemplate:
            id: closeModal
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - query: addDocumentModal.close()
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-08-05T23:00:00.328Z
      - filepicker2:
          pluginTemplate:
            id: filepicker2
            type: widget
            subtype: FilePickerWidget
            template:
              ordered:
                - parsedValue: ''
                - directorySelectable: false
                - color: '#3c92dc'
                - multipleSelectable: false
                - text: Upload File
                - tooltipText: ''
                - label: ''
                - labelMaxWidth: ''
                - labelPlacedOnLeft: false
                - disabled: ''
                - onFilePick: getDocuments
            position2:
              position2:
                container: bulkLoadModal
                row: 2
                col: 5
                height: 1
                width: 3
            createdAt: 2020-09-12T04:15:42.518Z
      - bulkLoadModal:
          pluginTemplate:
            id: bulkLoadModal
            type: widget
            subtype: ModalWidget
            template:
              ordered:
                - buttonBackgroundColor: '#3c92dc'
                - opened: false
                - onModalClose: ''
                - scroll: true
                - modalHeight: |
                    800px
                - onModalOpen: ''
                - modalWidth: 70%
                - closeOnOutsideClick: false
                - loading: ''
                - disabled: ''
                - buttonText: Upload Candidates
            position2:
              position2:
                container: tabbedcontainer1
                row: 1
                col: 6
                height: 1
                width: 2
            createdAt: 2020-09-12T17:07:39.942Z
      - candidateUploadTable:
          pluginTemplate:
            id: candidateUploadTable
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths: []
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered:
                      - '': error
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - '': '{{ !self ? "" : "red"}}'
                      - partyId: ''
                      - legislation: ''
                      - youtube: ''
                      - subtopics: ''
                      - level: ''
                      - zipcodes: ''
                      - facebook: ''
                      - party: ''
                      - circuit: ''
                      - county: ''
                      - name: ''
                      - sales: ''
                      - social: ''
                      - info: ''
                      - district: ''
                      - __metadata: ''
                      - policies: ''
                      - desc: ''
                      - instagram: ''
                      - twitter: ''
                      - overview: ''
                      - _id: ''
                      - website: ''
                      - id: ''
                      - createdAt: ''
                      - image: ''
                      - office: ''
                      - email: ''
                      - articles: ''
                      - linkedin: ''
                      - createdBy: ''
                      - other_policies: ''
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - '': true
                      - partyId: true
                      - legislation: true
                      - youtube: true
                      - subtopics: true
                      - level: true
                      - zipcodes: true
                      - facebook: true
                      - party: true
                      - circuit: true
                      - county: true
                      - name: true
                      - Sales: true
                      - sales: true
                      - social: true
                      - info: true
                      - district: true
                      - __metadata: true
                      - policies: true
                      - desc: true
                      - instagram: true
                      - twitter: true
                      - Title: true
                      - overview: true
                      - _id: true
                      - website: true
                      - id: true
                      - createdAt: true
                      - image: true
                      - office: true
                      - email: true
                      - Description: true
                      - articles: true
                      - linkedin: true
                      - createdBy: true
                      - other_policies: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: |-
                    {{  scrubData(filepicker2.parsedValue)
                    }}
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - pageSize: 9
                - useDynamicColumnSettings: false
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    ordered:
                      - array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    ordered:
                      - array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - name
                    - party
                    - office
                    - overview
                    - level
                    - county
                    - district
                    - circuit
                    - zipcodes
                    - website
                    - policies
                    - other_policies
                    - info
                    - facebook
                    - twitter
                    - instagram
                    - youtube
                    - linkedin
                    - image
                    - legislation
                    - ''
                    - partyId
                    - id
                    - articles
                    - social
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            position2:
              position2:
                container: bulkLoadModal
                row: 4
                height: 8
                width: 12
            createdAt: 2020-09-12T17:08:54.266Z
      - candidateAddForm:
          pluginTemplate:
            id: candidateAddForm
            type: widget
            subtype: JSONSchemaFormWidget
            template:
              ordered:
                - liveValidate: false
                - clearFormAfterSubmit: true
                - jsonSchema: "{\n  \"title\": \"Candidates form\",\n  \"description\": \"A form for editing candidates\",\n  \"type\": \"object\",\n  \"required\": [],\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"title\": \"Name\",\n    },\n    \"partyId\": {\n      \"type\": \"string\",\n      \"title\": \"Party\",\n      \"enum\": [ \"\", \"DEM\", \"REP\", \"NPA\", \"CPF\", \"ECO\", \"GRE\", \"IND\", \"LPF\", \"PSL\", \"REF\", \"WRI\", \"NOP\"],\n      \"enumNames\": [\"-- None --\", \"DEM - Democratic Party\",\"REP - Republican Party\", \"NPA - No Party Affiliation\", \"CPF - Constitution Party of Florida\", \"ECO - Ecology Party\", \"GRE - Green Party\", \"IND - Independent Party\", \"LPF - Libertarian Party of Florida\", \"PSL - Party for Socialism and Liberation - Florida PSL\", \"REF - Reform Party of Florida\", \"WRI - Write-In\",\"NOP - No Party\",]\n    },\n\t\t\"office\": {\n      \"type\": \"string\",\n      \"title\": \"Office\"\n    },\n    \"level\": {\n      \"type\": \"string\",\n      \"title\": \"Level\",\n      \"enum\": [\"national\", \"state\", \"local\"],\n      \"enumNames\": [\"National\", \"State\", \"Local\"]\n    },\n    \"county\": {\n      \"type\": \"string\",\n      \"title\": \"County\"\n    },\n    \"circuit\": {\n      \"type\": \"string\",\n      \"title\": \"Circuit\"\n    },\n    \"district\": {\n      \"type\": \"string\",\n      \"title\": \"District\"\n    },\n    \"image\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"Candidate Image\",\n    \t\"description\": \"(valid image link for candidate)\"\n    },\n\t \"website\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"Campaign Website\", \n      \"description\": \"(valid web link)\"\n    },\n    \"overview\": {\n      \"type\": \"string\",\n      \"title\": \"Overview\"\n    },\n    \"articles\": {\n      \"type\": \"string\",\n      \"title\": \"Articles\",\n    },\n    \"zipcodes\": {\n      \"type\": \"string\",\n      \"title\": \"Zipcodes\",\n      \"description\": \"(comma-separated values)\",\n      \"minLength\" : 5\n    },\n    \"policies\": {\n      \"type\": \"string\",\n      \"title\": \"Policies\",\n      \"description\": \"(comma-separated values)\"\n    },\n    \"other_policies\": {\n      \"type\": \"string\",\n      \"title\": \"Other Policies\",\n      \"description\": \"(comma-separated values)\"\n    }, \n    \"legislation\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"Legislation\"\n    },\n    \"facebook\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"Facebook  \"\n    },\n    \"twitter\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"Twitter  \"\n    },\n    \"instagram\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"Instagram   \"\n    },\n    \"youtube\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"YouTube  \"\n    },\n    \"linkedin\": {\n      \"type\": \"string\",\n      \"format\" : \"uri\",\n      \"title\": \"LinkedIn  \"\n    },\n    \n  },\n  \"required\": [\"level\", \"name\", \"office\", \"zipcodes\"]\n}"
                - data: |-
                    {
                      "createdBy": {{current_user.email}},
                      "createdAt": {{moment.now()}}
                    }
                - submitButtonFullWidth: false
                - submitDisabled: ''
                - uiSchema: |-
                    {
                      "policies": {},
                      "county": {},
                      "level": {},
                      "name": {},
                      "articles": {
                        "ui:widget" : "textarea"
                      },
                      "zipcodes": {
                        "ui:widget" : "textarea"
                      },
                      "image": {
                        
                      },
                      "partyId": {},
                      "party": {},
                      "other_policies": {},
                      "createdBy": {},
                      "circuit": {},
                      "website": {},
                      "overview": {},
                      "district": {},
                      "social": {},
                      "createdAt": {
                        "ui:widget": "date"
                      },
                      "id": {},
                      "office": {},
                      "legislation": {
                        "ui:widget" : "textarea"
                      },
                      "_id": {},
                      "__metadata": {}
                    }
                - submitButtonText: Add Candidate
                - onSubmit: insertCandidate
                - loading: ''
            position2:
              position2:
                container: addCandidateModal
                col: -1
                height: 11
                width: 3
            createdAt: 2020-09-12T17:39:23.443Z
      - transformer1:
          pluginTemplate:
            id: transformer1
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: >+

                    //return [ 5, 5, 5, 5, 5];


                    return scrubData( {{filepicker2.parsedValue}} );


                    // the parties abbreviated and their associated descriptions

                    var parties = {
                        "DEM": "Democratic Party",
                        "REP": "Republican Party",
                        "NPA": "No Party Affiliation",
                        "CPF": "Constitution Party of Florida",
                        "ECO": "Ecology Party",
                        "GRE": "Green Party",
                        "IND": "Independent Party",
                        "LPF": "Libertarian Party of Florida",
                        "PSL": "Party for Socialism and Liberation - Florida PSL",
                        "REF": "Reform Party of Florida",
                        "WRI": "Write-In",
                        "NOP": "No Party",
                    };


                    // a variable representing the pattern that a web link takes
                    so that we can validate web links against it.

                    var urlPattern = new RegExp(
                        "^(https?:\\/\\/)?" + // protocol
                        "((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.?)+[a-z]{2,}|" + // domain name
                        "((\\d{1,3}\\.){3}\\d{1,3}))" + // ip (v4) address
                        "(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*" + //port
                        "(\\?[;&amp;a-z\\d%_.~+=-]*)?" + // query string
                        "(\\#[-a-z\\d_]*)?$",
                        "i"
                    );


                    // given an array, walks through the array and changes the
                    shape of the data so it conforms as expected

                    function scrubData(data) {
                      console.log("scrub data called");
                        var result = [];
                        var sourceLen = data.length;
                        var doc = {};
                        for (var i = 0; i < sourceLen; i++) {
                            var name = trim(data[i].name);
                            var level = normalizeLevel(data[i].level); // must be 'National', 'State', or 'Local'
                            var county = trim(data[i].county); // may be null or empty
                            var district = data[i].district; // must be a number, can be empty
                            var circuit = trim(data[i].circuit); // is a string, may be empty
                            var partyId = trim(data[i].party); // may be empty - for judges, for instance
                            var office = trim(data[i].office).toLowerCase(); // what they are running for
                            var zipcodes = commaSepToArr(data[i].zipcodes); // comma separated list of zip codes
                            var website = trimURL(data[i].website); // campaign website, must be a valid url
                            var overview = trim(data[i].overview); // free form text
                            // TODO: lowercase all the policies
                            var policies = commaSepToArr(data[i].policies); // comma separated list of policies - must conform to one of several known policies
                            var other_policies = commaSepToArr(data[i].other_policies); // comma separated list of other polices
                            var articles = linesToArr(data[i].articles); // url markup [article_name](url) with newline characters as separators
                            var facebook = trimURL(data[i].facebook); // url
                            var twitter = trimURL(data[i].twitter); // url
                            var instagram = trimURL(data[i].instagram); // url
                            var youtube = trimURL(data[i].youtube); // url
                            var linkedin = trimURL(data[i].linkedin); // url
                            var image = trimURL(data[i].image); // url
                            var legislation = linesToArr(data[i].legislation); // url markup [article_name](url) with newline characters as separators
                            var ident = name + "-" + level + "-" + partyId + "-" + office;
                            doc = {
                                id: ident,
                                name: name,
                                level: level,
                                partyId: partyId,
                                party: getPartyDesc(partyId),
                                county: county,
                                district: district,
                                circuit: circuit,
                                office: office,
                                website: website,
                                image: image,
                                overview: overview,
                                zipcodes: zipcodes,
                                policies: policies,
                                other_policies: other_policies,
                                articles: articles,
                                social: {
                                    facebook: facebook,
                                    twitter: twitter,
                                    instagram: instagram,
                                    youtube: youtube,
                                    linkedin: linkedin,
                                },
                                legislation: legislation,
                                createdAt: new Date(),
                                createdBy: "Data Import Script",
                            };

                            // check for validity but still import the candidate if there are errors - put an error boolean on it so it can be represented differently
                            if(!isValid(i, doc)) {
                                doc.error = true;
                            }
                            
                            result[i] = doc;
                        }

                        return result;
                    }


                    // remove spaces in front of and at the end of the string

                    function trim(str) {
                        return (str && str != "undefined") ? str.trim() : '';
                    }


                    // remove extra spaces from URL if they exist before or
                    after

                    function trimURL(url) {
                        return (url && url != "undefined") ? url.trim().replace(/\r?\n|\r/g, "") : url;
                    }


                    // get a full description of the party given thte
                    abbreviation passed in

                    function getPartyDesc(party) {
                        if (party in parties)
                            return parties[party];
                        else {
                            console.log("ERR: party '" + party + "' is unknown'");
                            return party;
                        }
                    }


                    // checks if the row is valid

                    function isValid(row, data) {
                        if (!empty(data.name) &&
                            !empty(data.office) &&
                            validLevel(data.level) &&
                            validURL(data.image) &&
                            validURL(data.website) &&
                            validURL(data.social.facebook) &&
                            validURL(data.social.twitter) &&
                            validURL(data.social.instagram) &&
                            validURL(data.social.youtube) &&
                            validURL(data.social.linkedin)) {
                            return true;
                        }
                        console.log("Error with data on row " + row + " for candidate with name " + data.name + " and office '" + data.office + "'");
                        return false;
                    }


                    // ensures that the level exists and is made into lowercase

                    function normalizeLevel(str) {
                        return (!empty(str)) ? str.trim().toLowerCase() : '';
                    }


                    // ensures the level is a valid value

                    function validLevel(level) {
                        if (!empty(level)) {
                            level = level.trim().toLowerCase();
                            switch (level) {
                                case "national":
                                case "state":
                                case "local":
                                    return level;
                            }
                        }
                        console.log("ERR with level: '" + level + "'");
                        return false;
                    }


                    // ensures a valid URL

                    function validURL(myURL) {
                        if (empty(myURL)) return true; // urls can be empty
                        myURL = myURL.trim();
                        myURL = myURL.replace(/(\r\n|\n|\r)/gm, ""); // remove new line characters
                        var success = urlPattern.test(myURL);
                        if (!success) console.log("Error with url: " + myURL);
                        return success;
                    }


                    // converts comma separated values to an array

                    function commaSepToArr(str) {
                        if (!empty(str)) {
                            var arr = str.split(",");
                            var i;
                            for (i = 0; i < arr.length; i++) {
                                arr[i] = arr[i].trim();
                            }
                            return arr;
                        }
                        // empty so returning empty"
                        return [];
                    }


                    // converts lines of text into an array 

                    function linesToArr(str) {
                        return removeEmptyArrItems(!empty(str) ? str.split("\n") : []);
                    }


                    function removeEmptyArrItems(arr) {
                        return arr.filter(item => item);
                    }


                    // returns true if the string is empty or null or full of
                    spaces only

                    function empty(str) {
                        if (str) {
                            return str.trim() === "" ? true : false;
                        } else {
                            return true;
                        }
                    }


                - value: ''
            createdAt: 2020-09-12T23:00:37.809Z
      - getCandidates:
          pluginTemplate:
            id: getCandidates
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - query: |
                    var rows = {{filepicker2.parsedValue}} 
                    text10.setValue(rows.length)
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: true
                - runWhenPageLoads: false
                - transformer: |-
                    var rows = {{filepicker2.parsedValue}} 
                    text10.setValue(rows.length)
                    return data + 'ABC';
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-13T03:56:01.316Z
      - text12:
          pluginTemplate:
            id: text12
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: center
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    <h1>Bulk Upload Candidates</h1>
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                container: bulkLoadModal
                col: 3
                height: 1
                width: 7
            createdAt: 2020-09-14T20:05:57.233Z
      - text13:
          pluginTemplate:
            id: text13
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: center
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >
                    To add several candidates at once, use the **Upload File**
                    button. 


                    Results appear in the table. Click **Save** to add the
                    candidates to the database.
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                container: bulkLoadModal
                row: 1
                col: 3
                height: 1
                width: 7
            createdAt: 2020-09-14T20:07:21.085Z
      - insertCandidates:
          pluginTemplate:
            id: insertCandidates
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: '{{  selectCollection.value  }}'
                - triggersOnSuccess:
                    - getDocuments
                    - closeModal
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: setFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: '{{  documentAddEditor.value  }}'
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{ idToggle.value ? '''' : idInput.value }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: true
                - firestoreOrderBy: ''
                - requireConfirmation: false
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-14T20:50:49.011Z
      - insertCandidate:
          pluginTemplate:
            id: insertCandidate
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: candidates
                - triggersOnSuccess:
                    - getCandidatesMainView
                    - closeAddCandidateModal
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: setFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: '{{  candidateAddForm.data  }}'
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return "you can't submit this - it's wrong"
                - confirmationMessage: null
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: ''
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: true
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    data.id = {{candidateAddForm.data.name}} + "-" +
                    {{candidateAddForm.data.party}} + "-" +
                    {{candidateAddForm.data.level}} + "-" +
                    {{candidateAddForm.data.office}};

                    return data;
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: false
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-14T21:44:09.365Z
      - tabbedcontainer1:
          pluginTemplate:
            id: tabbedcontainer1
            type: widget
            subtype: TabbedContainerWidget
            template:
              ordered:
                - disabled: ''
                - selectedTab: '"0"'
                - selectedTabIndex: 0
                - showTabBar: true
                - tabNames: '["Candidates", "Policies"]'
                - spinWhenChildrenAreFetching: true
                - disableAnimation: false
            position2:
              position2:
                height: 23
                width: 12
            createdAt: 2020-09-15T20:52:06.936Z
      - candidatesTableMain:
          pluginTemplate:
            id: candidatesTableMain
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths:
                    - object:
                        id: level
                        value: 71
                    - object:
                        id: district
                        value: 60
                    - object:
                        id: county
                        value: 77
                    - object:
                        id: circuit
                        value: 58
                    - object:
                        id: party
                        value: 134
                    - object:
                        id: overview
                        value: 101
                    - object:
                        id: legislation
                        value: 182
                    - object:
                        id: id
                        value: 245
                    - object:
                        id: createdAt
                        value: 98
                    - object:
                        id: inactive
                        value: 66
                    - object:
                        id: name
                        value: 184
                    - object:
                        id: office
                        value: 171
                    - object:
                        id: state
                        value: 79
                    - object:
                        id: partyId
                        value: 56
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - modifiedBy: ''
                      - partyId: ''
                      - legislation: ''
                      - level: ''
                      - zipcodes: ''
                      - party: ''
                      - circuit: ''
                      - county: ''
                      - inactive: ''
                      - name: ''
                      - sales: ''
                      - social: ''
                      - district: ''
                      - __metadata: ''
                      - policies: ''
                      - state: ''
                      - modifiedTime: ''
                      - overview: ''
                      - _id: ''
                      - website: ''
                      - id: ''
                      - createdAt: ''
                      - image: ''
                      - modifiedAt: ''
                      - office: ''
                      - email: ''
                      - articles: ''
                      - createdBy: ''
                      - other_policies: ''
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - modifiedBy: true
                      - partyId: true
                      - legislation: true
                      - level: true
                      - zipcodes: true
                      - party: true
                      - circuit: true
                      - county: true
                      - inactive: true
                      - name: true
                      - Sales: true
                      - sales: true
                      - social: true
                      - district: true
                      - __metadata: true
                      - policies: true
                      - state: true
                      - modifiedTime: true
                      - Title: true
                      - overview: true
                      - _id: true
                      - website: true
                      - id: true
                      - createdAt: true
                      - image: true
                      - modifiedAt: true
                      - office: true
                      - email: true
                      - Description: true
                      - articles: true
                      - createdBy: true
                      - other_policies: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: '{{ Object.values(getCandidatesMainView.data)  }}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: false
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: Edit
                - columnMappersRenderAsHTML:
                    ordered: []
                - pageSize: 9
                - useDynamicColumnSettings: false
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    ordered:
                      - array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    ordered:
                      - array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - inactive
                    - name
                    - office
                    - level
                    - state
                    - partyId
                    - party
                    - district
                    - county
                    - circuit
                    - image
                    - website
                    - overview
                    - legislation
                    - articles
                    - policies
                    - other_policies
                    - zipcodes
                    - social
                    - _id
                    - id
                    - __metadata
                    - createdAt
                    - createdBy
                    - modifiedBy
                    - modifiedTime
                    - modifiedAt
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            position2:
              position2:
                container: tabbedcontainer1
                row: 2
                height: 8
                width: 12
            createdAt: 2020-09-15T20:54:29.849Z
      - getCandidatesMainView:
          pluginTemplate:
            id: getCandidatesMainView
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: candidates
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: queryFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: ''
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: ''
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: false
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: '[{"key":"","value":""}]'
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-15T20:57:34.432Z
      - getPoliciesMainView:
          pluginTemplate:
            id: getPoliciesMainView
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: policies
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: queryFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: ''
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: ''
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: false
                - orderByChildValue: ''
                - limit: '25'
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: '[{"key":"","value":""}]'
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-15T21:00:07.741Z
      - policiesTableMain:
          pluginTemplate:
            id: policiesTableMain
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths: []
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - createdBy: ''
                      - id: ''
                      - overview: ''
                      - subtopics: ''
                      - name: ''
                      - createdAt: ''
                      - _id: ''
                      - __metadata: ''
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - subtopics: true
                      - name: true
                      - Sales: true
                      - __metadata: true
                      - Title: true
                      - overview: true
                      - _id: true
                      - id: true
                      - createdAt: true
                      - Description: true
                      - createdBy: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: false
                - data: |-
                    {{ Object.values(getPoliciesMainView.data)  
                    }}
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - pageSize: 16
                - useDynamicColumnSettings: false
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    ordered:
                      - array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    ordered:
                      - array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - id
                    - name
                    - overview
                    - subtopics
                    - createdBy
                    - createdAt
                    - _id
                    - __metadata
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: true
            position2:
              position2:
                container: tabbedcontainer1
                height: 12
                width: 12
                tabNum: 1
            createdAt: 2020-09-15T21:01:11.275Z
      - deleteCandidateButton:
          pluginTemplate:
            id: deleteCandidateButton
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#cc5248'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Delete Candidate
                - exportQuery: ''
                - action: deleteCandidate
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: container4
                row: 5
                col: 6
                height: 1
                width: 4
            createdAt: 2020-09-15T22:20:03.224Z
      - deleteCandidate:
          pluginTemplate:
            id: deleteCandidate
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: Candidate deleted successfully!
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: candidates
                - triggersOnSuccess:
                    - getCandidatesMainView
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: deleteFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: ''
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: >-
                    Are you sure you want to delete Candidate '{{
                    candidatesTableMain.selectedRow.data.name}}'?
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{   candidatesTableMain.selectedRow.data._id   }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: true
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-15T22:20:34.488Z
      - deletePolicy:
          pluginTemplate:
            id: deletePolicy
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: Policy deleted successfully!
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: policies
                - triggersOnSuccess:
                    - getPoliciesMainView
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: deleteFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: ''
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: Are you sure you want to delete this Policy?
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{   policiesTableMain.selectedRow.data._id   }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: true
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-15T22:44:30.205Z
      - text10:
          pluginTemplate:
            id: text10
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: center
                - truncateOverflow: false
                - hidden: ''
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    <h4>Candidate Details</h4>
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: false
            position2:
              position2:
                container: container4
                col: 1
                height: 1
                width: 10
            createdAt: 2020-09-15T23:06:30.795Z
      - addCandidateModal:
          pluginTemplate:
            id: addCandidateModal
            type: widget
            subtype: ModalWidget
            template:
              ordered:
                - buttonBackgroundColor: '#3c92dc'
                - opened: false
                - onModalClose: ''
                - scroll: true
                - modalHeight: ''
                - onModalOpen: ''
                - modalWidth: 65%
                - closeOnOutsideClick: false
                - loading: ''
                - disabled: ''
                - buttonText: Create Candidate
            position2:
              position2:
                container: tabbedcontainer1
                row: 15
                col: 9
                height: 1
                width: 3
            createdAt: 2020-09-15T23:54:21.512Z
      - closeAddCandidateModal:
          pluginTemplate:
            id: closeAddCandidateModal
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - query: addCandidateModal.close()
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-16T00:03:44.234Z
      - updateCandidateModal:
          pluginTemplate:
            id: updateCandidateModal
            type: widget
            subtype: ModalWidget
            template:
              ordered:
                - buttonBackgroundColor: '#478b60'
                - opened: false
                - onModalClose: ''
                - modalHeight: 800px
                - onModalOpen: ''
                - modalWidth: 70%
                - closeOnOutsideClick: false
                - loading: ''
                - disabled: ''
                - buttonText: Edit Candidate
            position2:
              position2:
                container: container4
                row: 5
                col: 2
                height: 1
                width: 4
            createdAt: 2020-09-16T02:00:31.182Z
      - nameInput:
          pluginTemplate:
            id: nameInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.name}}'
                - validationMessage: Name is a required field and cannot be empty
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: '3'
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: minlength
                - label: Name
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: '50'
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: true
            position2:
              position2:
                container: container2
                row: 1
                height: 1
                width: 6
            createdAt: 2020-09-16T02:04:14.219Z
      - container2:
          pluginTemplate:
            id: container2
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - backgroundColor: blue
                - scroll: false
            position2:
              position2:
                container: updateCandidateModal
                row: 1
                height: 16
                width: 6
            createdAt: 2020-09-16T03:55:28.296Z
      - levelSelect:
          pluginTemplate:
            id: levelSelect
            type: widget
            subtype: SelectWidget
            template:
              ordered:
                - enableClientSideMatching: true
                - values: '["national", "state", "local"]'
                - allowOutOfRangeValues: false
                - enableFuzzyMatching: true
                - searchValue: ''
                - showFetchingIndicator: true
                - enableCaseSensitivity: false
                - validationMessage: ''
                - displayValue: ''
                - tooltipText: ''
                - value: '{{candidatesTableMain.selectedRow.data.level}}'
                - maxResults: 50
                - placeholder: ''
                - label: Level
                - labelMaxWidth: '50'
                - labelPlacedOnLeft: false
                - validationState: ''
                - onSelect: ''
                - disabled: ''
                - hideClearButton: false
                - required: true
                - labels: '["National", "State", "Local"]'
            position2:
              position2:
                container: container2
                row: 2
                height: 1
                width: 6
            createdAt: 2020-09-16T03:56:55.782Z
      - partySelect:
          pluginTemplate:
            id: partySelect
            type: widget
            subtype: SelectWidget
            template:
              ordered:
                - enableClientSideMatching: true
                - values: '{{window.partyKeys}}'
                - allowOutOfRangeValues: true
                - enableFuzzyMatching: true
                - searchValue: ''
                - showFetchingIndicator: true
                - enableCaseSensitivity: false
                - validationMessage: ''
                - displayValue: ''
                - tooltipText: ''
                - value: '{{candidatesTableMain.selectedRow.data.partyId}}'
                - enableHtmlRenderer: false
                - maxResults: 50
                - placeholder: ''
                - label: Party
                - labelMaxWidth: '50'
                - labelPlacedOnLeft: false
                - validationState: ''
                - onSelect: ''
                - disabled: ''
                - hideClearButton: false
                - required: false
                - labels: '{{window.partyValues}}'
            position2:
              position2:
                container: container2
                row: .nan
                height: 1
                width: 6
            createdAt: 2020-09-16T04:24:33.328Z
      - officeInput:
          pluginTemplate:
            id: officeInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.office}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Office
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: '50'
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: true
            position2:
              position2:
                container: container2
                row: 3
                height: 1
                width: 6
            createdAt: 2020-09-16T04:29:15.182Z
      - districtInput:
          pluginTemplate:
            id: districtInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.district}}'
                - validationMessage: District must be a number
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: integer
                - label: District
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: number
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container2
                row: 2
                col: 7
                height: 1
                width: 4
            createdAt: 2020-09-16T04:37:18.599Z
      - circuitInput:
          pluginTemplate:
            id: circuitInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.circuit}}'
                - validationMessage: 'Circuit must '
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: integer
                - label: Circuit
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: number
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container2
                row: 3
                col: 7
                height: 1
                width: 4
            createdAt: 2020-09-16T04:38:30.940Z
      - countyInput:
          pluginTemplate:
            id: countyInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.county}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: County
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container2
                row: 1
                col: 7
                height: 1
                width: 4
            createdAt: 2020-09-16T04:39:24.576Z
      - imageInput:
          pluginTemplate:
            id: imageInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.image}}'
                - validationMessage: Invalid web link
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Image
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: 'true'
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: url
                - allowedRegex: >-
                    ^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
                - required: false
            position2:
              position2:
                container: container2
                row: 8
                height: 1
                width: 11
            createdAt: 2020-09-16T04:40:38.885Z
      - websiteInput:
          pluginTemplate:
            id: websiteInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.website}}'
                - validationMessage: Invalid web link
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Website
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: true
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: url
                - allowedRegex: >-
                    ^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
                - required: false
            position2:
              position2:
                container: container2
                row: 9
                height: 1
                width: 11
            createdAt: 2020-09-16T04:43:13.316Z
      - youtubeInput:
          pluginTemplate:
            id: youtubeInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.social.youtube}}'
                - validationMessage: Invalid web link
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: YouTube
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: true
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: url
                - allowedRegex: >-
                    ^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
                - required: false
            position2:
              position2:
                container: container2
                row: 11
                height: 1
                width: 11
            createdAt: 2020-09-16T04:45:08.871Z
      - facebookInput:
          pluginTemplate:
            id: facebookInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.social.facebook}}'
                - validationMessage: Invalid web link
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Facebook
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: true
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: url
                - allowedRegex: >-
                    ^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
                - required: false
            position2:
              position2:
                container: container2
                row: 10
                height: 1
                width: 11
            createdAt: 2020-09-16T04:45:11.990Z
      - twitterInput:
          pluginTemplate:
            id: twitterInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.social.twitter}}'
                - validationMessage: Invalid web link
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Twitter
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: true
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: url
                - allowedRegex: >-
                    ^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
                - required: false
            position2:
              position2:
                container: container2
                row: 12
                height: 1
                width: 11
            createdAt: 2020-09-16T04:47:12.577Z
      - linkedinInput:
          pluginTemplate:
            id: linkedinInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.social.linkedin}}'
                - validationMessage: Invalid web link
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: LinkedIn
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: true
                - labelPlacedOnLeft: false
                - onSubmit: updateCandidate
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: url
                - allowedRegex: >-
                    ^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
                - required: false
            position2:
              position2:
                container: container2
                row: 14
                height: 1
                width: 11
            createdAt: 2020-09-16T04:48:32.045Z
      - instagramInput:
          pluginTemplate:
            id: instagramInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{candidatesTableMain.selectedRow.data.social.instagram}}'
                - validationMessage: Invalid web link
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: regexp
                - label: Instagram
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: true
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: url
                - allowedRegex: >-
                    ^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$
                - required: false
            position2:
              position2:
                container: container2
                row: 13
                height: 1
                width: 11
            createdAt: 2020-09-16T04:48:34.304Z
      - container3:
          pluginTemplate:
            id: container3
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - backgroundColor: blue
                - scroll: false
            position2:
              position2:
                container: updateCandidateModal
                row: 1
                col: 6
                height: 16
                width: 6
            createdAt: 2020-09-16T04:51:54.156Z
      - overviewInput:
          pluginTemplate:
            id: overviewInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: |
                    {{candidatesTableMain.selectedRow.data.overview}}
                - validationMessage: ''
                - tooltipText: >-
                    Description of Candidate. Markdown can be used to enhance
                    the formatting of the text.
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Overview
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container3
                height: 3
                width: 12
            createdAt: 2020-09-16T05:00:32.400Z
      - legislationInput:
          pluginTemplate:
            id: legislationInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >
                    {{ _.join(candidatesTableMain.selectedRow.data.legislation,
                    "\n")}}
                - validationMessage: ''
                - tooltipText: >-
                    Each link to legislation passed by this Candidate goes on a
                    new line and takes the format 



                    [Legislation Title](Legislation Link)
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: >-
                    Each link to legislation passed by this Candidate goes on a
                    new line and takes the format [Legislation
                    Title](Legislation Link)
                - validationType: ''
                - label: Legislation
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container3
                row: 6
                height: 3
                width: 12
            createdAt: 2020-09-16T05:29:26.372Z
      - articlesInput:
          pluginTemplate:
            id: articlesInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >
                    {{ _.join(candidatesTableMain.selectedRow.data.articles,
                    "\n")}}
                - validationMessage: 'Invalid Markdown formatting. Must be [title](weblink)'
                - tooltipText: |-
                    Each article goes on a new line and takes the format 

                    [ArticleTitle](ArticleLink)
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: >-
                    Each article goes on a new line and takes the format
                    [ArticleTitle](ArticleLink)
                - validationType: regexp
                - label: Articles
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: true
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: '^\[([\w\s\d]+)\]\(((?:\/|https?:\/\/)[\w\d./?=#\-]+)\)(\s)*$'
                - required: false
            position2:
              position2:
                container: container3
                row: 3
                height: 3
                width: 12
            createdAt: 2020-09-16T05:35:38.284Z
      - zipcodesInput:
          pluginTemplate:
            id: zipcodesInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(candidatesTableMain.selectedRow.data.zipcodes,
                    ",")}}
                - validationMessage: >-
                    At least one zip code is required and it is a minimum of 5
                    numbers
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: '5'
                - validationLengthValue: ''
                - placeholder: Enter multiple zip codes separated by commas
                - validationType: minlength
                - label: Zip Codes
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: |
                    50
                - enableValidationType: true
                - labelPlacedOnLeft: true
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: true
            position2:
              position2:
                container: container2
                row: 4
                height: 3
                width: 11
            createdAt: 2020-09-16T05:38:58.146Z
      - text15:
          pluginTemplate:
            id: text15
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: center
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    <h2>Update Candidate</h2>
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: false
            position2:
              position2:
                container: updateCandidateModal
                col: 4
                height: 1
                width: 4
            createdAt: 2020-09-16T05:45:00.531Z
      - policiesInput:
          pluginTemplate:
            id: policiesInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >
                    {{ _.join(candidatesTableMain.selectedRow.data.policies,
                    "\n")}}
                - validationMessage: ''
                - tooltipText: >-
                    Put each policy on a new line. These policies are from a
                    known list of tracked policies.
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: >-
                    Put each policy on a new line. These policies are from a
                    known list of tracked policies.
                - validationType: ''
                - label: Policies
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container3
                row: 9
                height: 3
                width: 12
            createdAt: 2020-09-16T05:48:33.545Z
      - otherPoliciesInput:
          pluginTemplate:
            id: otherPoliciesInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >
                    {{
                    _.join(candidatesTableMain.selectedRow.data.other_policies,
                    "\n")}}
                - validationMessage: ''
                - tooltipText: >-
                    Each policy goes on a new line and represents additional
                    policies that are not currently tracked with the list of
                    known policies
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: >-
                    Each policy goes on a new line and represents additional
                    policies that are not currently tracked with the list of
                    known policies
                - validationType: ''
                - label: Other Policies
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container3
                row: 12
                height: 3
                width: 12
            createdAt: 2020-09-16T05:57:55.411Z
      - button4:
          pluginTemplate:
            id: button4
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#478b60'
                - internalUrlHashParams: ''
                - hidden: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Update
                - exportQuery: ''
                - action: updateCandidate
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: '{{ updateCandidate.isFetching }}'
                - disabled: >
                    {{ nameInput.value === '' || officeInput.value === '' || 

                    zipcodesInput.value === '' || zipcodesInput.value.length < 5
                    || 

                    imageInput.validationState.validationType == 'ERROR' || 

                    websiteInput.validationState.validationType == 'ERROR' ||

                    facebookInput.validationState.validationType == 'ERROR' ||

                    youtubeInput.validationState.validationType == 'ERROR' ||

                    twitterInput.validationState.validationType == 'ERROR' || 

                    instagramInput.validationState.validationType == 'ERROR' ||

                    linkedinInput.validationState.validationType == 'ERROR' }}
            position2:
              position2:
                container: updateCandidateModal
                row: 17
                col: 5
                height: 1
                width: 2
            createdAt: 2020-09-16T06:07:31.355Z
      - container4:
          pluginTemplate:
            id: container4
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - backgroundColor: blue
                - scroll: false
                - hidden: '{{!candidatesTableMain.selectedRow.data}}'
            position2:
              position2:
                container: tabbedcontainer1
                row: 14
                height: 7
                width: 5
            createdAt: 2020-09-16T14:33:48.786Z
      - image2:
          pluginTemplate:
            id: image2
            type: widget
            subtype: ImageWidget
            template:
              ordered:
                - valueToCopy: ''
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - exportQuery: ''
                - imageUrl: '{{candidatesTableMain.selectedRow.data.image}}'
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: container4
                row: 1
                col: 1
                height: 3
                width: 3
            createdAt: 2020-09-16T14:34:06.976Z
      - text17:
          pluginTemplate:
            id: text17
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: "<h5 style=\"color:#010101\">{{candidatesTableMain.selectedRow.data.name}}</h5>\n\n<h6 style=\"color:#cc5248\">{{candidatesTableMain.selectedRow.data.party}}</h6>\n<span style=\"color:#717171\">{{_.startCase(candidatesTableMain.selectedRow.data.office)}}</span>\n\n<p>\n  <br/>\n  <b>Status: </b>\n  \t    \n{{candidatesTableMain.selectedRow.data.inactive ? \n    \"<span style='color:#717171'>Inactive</span>\" : \"<span style='color:green'>Active</span>\"}}\n</p>\n\n"
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#555555'
                - renderAsMarkdown: false
            position2:
              position2:
                container: container4
                row: 1
                col: 4
                height: 3
                width: 8
            createdAt: 2020-09-16T14:36:58.751Z
      - container5:
          pluginTemplate:
            id: container5
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - backgroundColor: blue
                - scroll: false
                - hidden: '{{!policiesTableMain.selectedRow.data}}'
            position2:
              position2:
                container: tabbedcontainer1
                row: 13
                height: 6
                width: 5
                tabNum: 1
            createdAt: 2020-09-16T15:13:17.157Z
      - text14:
          pluginTemplate:
            id: text14
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: center
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    <h3>Policy Details</h3>
                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: false
            position2:
              position2:
                container: container5
                col: 2
                height: 1
                width: 7
            createdAt: 2020-09-16T15:13:28.743Z
      - text19:
          pluginTemplate:
            id: text19
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: top
                - scrollOverflow: false
                - tooltipText: ''
                - value: >
                    **{{policiesTableMain.selectedRow.data.name}} Overview**:
                    {{policiesTableMain.selectedRow.data.overview}}
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                container: container5
                row: 1
                height: 2
                width: 12
            createdAt: 2020-09-16T15:14:24.866Z
      - updatePolicyModal:
          pluginTemplate:
            id: updatePolicyModal
            type: widget
            subtype: ModalWidget
            template:
              ordered:
                - buttonBackgroundColor: '#478b60'
                - opened: false
                - onModalClose: ''
                - scroll: false
                - modalHeight: 850px
                - onModalOpen: ''
                - modalWidth: 80%
                - closeOnOutsideClick: true
                - loading: ''
                - disabled: ''
                - buttonText: Edit Policy
            position2:
              position2:
                container: container5
                row: 4
                col: 2
                height: 1
                width: 3
            createdAt: 2020-09-16T15:19:31.656Z
      - tabbedcontainer2:
          pluginTemplate:
            id: tabbedcontainer2
            type: widget
            subtype: TabbedContainerWidget
            template:
              ordered:
                - disabled: ''
                - selectedTab: '"0"'
                - selectedTabIndex: 0
                - showTabBar: true
                - tabNames: >-
                    ["Policy Details", "Subtopic One", "Subtopic Two", "Subtopic
                    Three", "Subtopic Four"]
                - spinWhenChildrenAreFetching: true
                - disableAnimation: false
                - hidden: ''
            position2:
              position2:
                container: updatePolicyModal
                row: 1
                height: 18
                width: 12
            createdAt: 2020-09-16T15:22:33.447Z
      - button5:
          pluginTemplate:
            id: button5
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#478b60'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Update
                - exportQuery: ''
                - action: updatePolicy
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: ''
                - disabled: '{{policyNameInput.value === ''''}}'
            position2:
              position2:
                container: updatePolicyModal
                row: 19
                col: 5
                height: 1
                width: 2
            createdAt: 2020-09-16T15:23:33.432Z
      - policyNameInput:
          pluginTemplate:
            id: policyNameInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.name}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Policy Name
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: tabbedcontainer2
                col: 2
                height: 1
                width: 6
            createdAt: 2020-09-16T15:24:58.151Z
      - policyOverviewEditor:
          pluginTemplate:
            id: policyOverviewEditor
            type: widget
            subtype: TextEditorWidget
            template:
              ordered:
                - value: '{{policiesTableMain.selectedRow.data.overview}}'
                - onBlur: ''
            position2:
              position2:
                container: tabbedcontainer2
                row: 2
                col: 2
                height: 7
                width: 7
            createdAt: 2020-09-16T15:25:27.118Z
      - policyOverviewInput:
          pluginTemplate:
            id: policyOverviewInput
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: |
                    **Overview**
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#717171'
                - renderAsMarkdown: true
            position2:
              position2:
                container: tabbedcontainer2
                row: 1
                col: 2
                height: 1
                width: 3
            createdAt: 2020-09-16T15:27:51.698Z
      - text22:
          pluginTemplate:
            id: text22
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: center
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: >+
                    <h3>Edit Policy:
                    {{policiesTableMain.selectedRow.data.name}}</h3>

                - renderAsHtml: true
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: false
            position2:
              position2:
                container: updatePolicyModal
                col: 2
                height: 1
                width: 7
            createdAt: 2020-09-16T15:32:38.716Z
      - st1NameInput:
          pluginTemplate:
            id: st1NameInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''0''].name}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Subtopic Name
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: true
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                col: 2
                height: 1
                width: 7
            createdAt: 2020-09-16T15:50:38.243Z
      - st1PosAInput:
          pluginTemplate:
            id: st1PosAInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[0].positionA}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 7
                height: 4
                width: 5
            createdAt: 2020-09-16T15:53:42.956Z
      - st1PosBInput:
          pluginTemplate:
            id: st1PosBInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[0].positionB}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 11
                height: 4
                width: 5
            createdAt: 2020-09-16T15:54:57.675Z
      - st1PosOtherInput:
          pluginTemplate:
            id: st1PosOtherInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[0].positionOther}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Other Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 15
                height: 4
                width: 5
            createdAt: 2020-09-16T15:56:15.787Z
      - st1DescLinksInput:
          pluginTemplate:
            id: st1DescLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['0'].descriptionLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 1
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T16:16:05.198Z
      - st1PosBLinksInput:
          pluginTemplate:
            id: st1PosBLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['0'].positionBLinks,
                    "\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 11
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T16:17:52.887Z
      - st1PosALinksInput:
          pluginTemplate:
            id: st1PosALinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['0'].positionALinks,"\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 7
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T16:17:54.767Z
      - updateCandidate:
          pluginTemplate:
            id: updateCandidate
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: Document updated successfully!
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: candidates
                - triggersOnSuccess:
                    - getCandidatesMainView
                    - closeUpdateCandidateModal
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: updateFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: '{{updateCandidateTransformer.value}}'
                - errorTransformer: 'return {{._isEmpty(data.name)  }}'
                - confirmationMessage: Are you sure you want to update this document?
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{   candidatesTableMain.selectedRow.data._id   }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: true
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-16T16:50:33.905Z
      - updateCandidateTransformer:
          pluginTemplate:
            id: updateCandidateTransformer
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: "\n//var data = {{updateCandidate.data}}\nvar newData = {\n  \"name\": {{ _.trim(nameInput.value)}},\n  \"inactive\": {{activeSelect.value}},\n  \"partyId\": {{partySelect.value}},\n  \"party\": {{partySelect.displayValue}},\n\t\"state\": {{stateSelect.value}},\n  \"level\": {{levelSelect.value}},\n  \"office\": {{officeInput.value}},\n  \"district\": {{districtInput.value}},\n  \"county\": {{countyInput.value}},\n  \"circuit\": {{circuitInput.value}},\n  \"zipcodes\": _.split({{zipcodesInput.value}}, \",\"),\n  \"image\": {{imageInput.value}}, // TODO: validate\n  \"website\": {{websiteInput.value}}, // TODO: validate\n  \"social\": {\n        \"facebook\": {{facebookInput.value}},   // TODO: validate\n        \"youtube\": {{youtubeInput.value}},     // TODO: validate\n        \"twitter\": {{twitterInput.value}},     // TODO: validate\n        \"linkedin\": {{linkedinInput.value}},   // TODO: validate\n        \"instagram\": {{instagramInput.value}}, // TODO: validate\n        },\n  \"overview\": {{overviewInput.value}},\n  \"articles\": {{_.split(articlesInput.value,\"\\n\")}},        // TODO: validate\n  \"legislation\": {{_.split(legislationInput.value, \"\\n\")}}, // TODO: validate\n  \"policies\": {{_.split(policiesInput.value, \"\\n\")}},\n  \"other_policies\": {{_.split(otherPoliciesInput.value, \"\\n\")}},\n  \"modifiedBy\": {{current_user.email}},\n  \"modifiedAt\": {{moment()}},\n}                       \nreturn newData"
                - value: ''
            createdAt: 2020-09-16T16:55:08.458Z
      - closeUpdateCandidateModal:
          pluginTemplate:
            id: closeUpdateCandidateModal
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - query: updateCandidateModal.close()
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-16T19:08:30.797Z
      - container6:
          pluginTemplate:
            id: container6
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: false
                - showDropShadow: false
                - backgroundColor: white
                - scroll: true
            position2:
              position2:
                container: tabbedcontainer2
                height: 16
                width: 12
                tabNum: 1
            createdAt: 2020-09-16T20:55:35.633Z
      - container7:
          pluginTemplate:
            id: container7
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: false
                - showDropShadow: false
                - backgroundColor: white
                - scroll: true
            position2:
              position2:
                container: tabbedcontainer2
                height: 16
                width: 12
                tabNum: 2
            createdAt: 2020-09-16T21:03:29.061Z
      - st2InfoInput:
          pluginTemplate:
            id: st2InfoInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''1''].info}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 4
                height: 3
                width: 5
            createdAt: 2020-09-16T21:03:29.375Z
      - st2PosAInput:
          pluginTemplate:
            id: st2PosAInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[1].positionA}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 7
                height: 4
                width: 5
            createdAt: 2020-09-16T21:03:29.869Z
      - st2PosBInput:
          pluginTemplate:
            id: st2PosBInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[1].positionB}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 11
                height: 4
                width: 5
            createdAt: 2020-09-16T21:03:30.494Z
      - st2PosOtherInput:
          pluginTemplate:
            id: st2PosOtherInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[1].positionOther}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Other Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 15
                height: 4
                width: 5
            createdAt: 2020-09-16T21:03:30.799Z
      - st2InfoLinksInput:
          pluginTemplate:
            id: st2InfoLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['1'].infoLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 4
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T21:03:31.104Z
      - st2PosBLinksInput:
          pluginTemplate:
            id: st2PosBLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['1'].positionBLinks,
                    "\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 11
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T21:03:31.446Z
      - st2PosALinksInput:
          pluginTemplate:
            id: st2PosALinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['1'].positionALinks,"\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 7
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T21:03:31.844Z
      - container8:
          pluginTemplate:
            id: container8
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: false
                - backgroundColor: white
                - scroll: true
            position2:
              position2:
                container: tabbedcontainer2
                height: 16
                width: 12
                tabNum: 3
            createdAt: 2020-09-16T21:05:08.751Z
      - st3InfoInput:
          pluginTemplate:
            id: st3InfoInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''2''].info}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 4
                height: 3
                width: 5
            createdAt: 2020-09-16T21:05:09.068Z
      - st3PosAInput:
          pluginTemplate:
            id: st3PosAInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[2].positionA}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 7
                height: 4
                width: 5
            createdAt: 2020-09-16T21:05:09.546Z
      - st3PosBInput:
          pluginTemplate:
            id: st3PosBInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[2].positionB}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 11
                height: 4
                width: 5
            createdAt: 2020-09-16T21:05:10.110Z
      - st3PosOtherInput:
          pluginTemplate:
            id: st3PosOtherInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[2].positionOther}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Other Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 15
                height: 4
                width: 5
            createdAt: 2020-09-16T21:05:10.379Z
      - st3InfoLinksInput:
          pluginTemplate:
            id: st3InfoLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['2'].infoLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 4
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T21:05:10.688Z
      - st3PosBLinksInput:
          pluginTemplate:
            id: st3PosBLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['2'].positionBLinks,
                    "\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 11
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T21:05:10.955Z
      - st3PosALinksInput:
          pluginTemplate:
            id: st3PosALinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['2'].positionALinks,"\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 7
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T21:05:11.313Z
      - container9:
          pluginTemplate:
            id: container9
            type: widget
            subtype: ContainerWidget
            template:
              ordered:
                - title: ''
                - disabled: ''
                - spinWhenChildrenAreFetching: true
                - showBorder: false
                - showDropShadow: false
                - backgroundColor: white
                - scroll: true
            position2:
              position2:
                container: tabbedcontainer2
                height: 16
                width: 12
                tabNum: 4
            createdAt: 2020-09-16T21:05:58.497Z
      - st4InfoInput:
          pluginTemplate:
            id: st4InfoInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''3''].info}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 4
                height: 3
                width: 5
            createdAt: 2020-09-16T21:05:58.811Z
      - st4PosAInput:
          pluginTemplate:
            id: st4PosAInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[3].positionA}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 7
                height: 4
                width: 5
            createdAt: 2020-09-16T21:05:59.280Z
      - st4PosBInput:
          pluginTemplate:
            id: st4PosBInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[3].positionB}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 11
                height: 4
                width: 5
            createdAt: 2020-09-16T21:05:59.809Z
      - st4PosOtherInput:
          pluginTemplate:
            id: st4PosOtherInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics[3].positionOther}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Other Arguments
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 15
                height: 4
                width: 5
            createdAt: 2020-09-16T21:06:00.176Z
      - st4InfoLinksInput:
          pluginTemplate:
            id: st4InfoLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['3'].infoLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 4
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T21:06:00.507Z
      - st4PosBLinksInput:
          pluginTemplate:
            id: st4PosBLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['3'].positionBLinks,
                    "\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position B Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 11
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T21:06:00.872Z
      - st4PosALinksInput:
          pluginTemplate:
            id: st4PosALinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{_.join(policiesTableMain.selectedRow.data.subtopics['3'].positionALinks,"\n")}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Position A Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 7
                col: 6
                height: 4
                width: 6
            createdAt: 2020-09-16T21:06:01.294Z
      - updatePolicy:
          pluginTemplate:
            id: updatePolicy
            type: datasource
            subtype: FirebaseQuery
            resourceName: MyVote Admin App Resource
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: Document updated successfully!
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - firestoreCollection: policies
                - triggersOnSuccess:
                    - getPoliciesMainView
                    - closeUpdatePolicyModal
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - endAt: ''
                - firebaseService: firestore
                - showSuccessToaster: true
                - equalTo: ''
                - cacheKeyTtl: ''
                - metadata: null
                - uid: ''
                - actionType: updateFirestore
                - triggersOnFailure: []
                - setDbValue: ''
                - value: '{{policyTransformer.value}}'
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: Are you sure you want to update this document?
                - isFetching: false
                - filterType: ''
                - rawData: null
                - userOptions: ''
                - docId: '{{   policiesTableMain.selectedRow.data._id   }}'
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - ordering: ''
                - startAt: ''
                - limitType: ''
                - dbRef: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - phoneNumber: ''
                - nextPageToken: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - useRawCollectionId: false
                - firestoreOrderBy: ''
                - requireConfirmation: true
                - orderByChildValue: ''
                - limit: ''
                - enableCaching: false
                - firestoreOrderDirection: ''
                - firestoreWhere: ''
                - email: ''
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-16T21:25:16.355Z
      - closeUpdatePolicyModal:
          pluginTemplate:
            id: closeUpdatePolicyModal
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - query: updatePolicyModal.close()
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-16T21:27:37.342Z
      - policyTransformer:
          pluginTemplate:
            id: policyTransformer
            type: function
            subtype: Function
            template:
              ordered:
                - funcBody: |-
                    var newData = {
                      "name": {{ policyNameInput.value }},
                      "overview": {{ policyOverviewEditor.value }},
                      "subtopics": [
                        {
                          "name": {{st1NameInput.value}},
                          "description": {{st1DescInput.value}},
                          "descriptionLinks": {{_.split(st1DescLinksInput.value, "\n")}},
                          "info": {{st1NameInput.value}},
                          "infoLinks": {{_.split(st1DescLinksInput.value, "\n")}},
                          "positionA": {{st1PosAInput.value}},
                          "positionALinks": {{_.split(st1PosALinksInput.value, "\n")}},
                          "positionB": {{st1PosBInput.value}},
                          "positionBLinks": {{_.split(st1PosBLinksInput.value, "\n")}},
                          "positionOther": {{st1PosOtherInput.value}},
                        },
                        {
                          "name": {{st2NameInput.value}},
                          "description": {{st2DescInput.value}},
                          "descriptionLinks": {{_.split(st2DescLinksInput.value, "\n")}},
                          "info": {{st2InfoInput.value}},
                          "infoLinks": {{_.split(st2InfoLinksInput.value, "\n")}},
                          "positionA": {{st2PosAInput.value}},
                          "positionALinks": {{_.split(st2PosALinksInput.value, "\n")}},
                          "positionB": {{st2PosBInput.value}},
                          "positionBLinks": {{_.split(st2PosBLinksInput.value, "\n")}},
                          "positionOther": {{st2PosOtherInput.value}},
                        },
                        {
                          "name": {{st3NameInput.value}},
                          "description": {{st3DescInput.value}},
                          "descriptionLinks": {{_.split(st3DescLinksInput.value, "\n")}}, 
                          "info": {{st3InfoInput.value}},
                          "infoLinks": {{_.split(st3InfoLinksInput.value, "\n")}},
                          "positionA": {{st3PosAInput.value}},
                          "positionALinks": {{_.split(st3PosALinksInput.value, "\n")}},
                          "positionB": {{st3PosBInput.value}},
                          "positionBLinks": {{_.split(st3PosBLinksInput.value, "\n")}},
                          "positionOther": {{st3PosOtherInput.value}},
                        },
                        {
                          "name": {{st4NameInput.value}},
                          "description": {{st4DescInput.value}},
                          "descriptionLinks": {{_.split(st4DescLinksInput.value, "\n")}}, 
                          "info": {{st4InfoInput.value}},
                          "infoLinks": {{_.split(st4InfoLinksInput.value, "\n")}},
                          "positionA": {{st4PosAInput.value}},
                          "positionALinks": {{_.split(st4PosALinksInput.value, "\n")}},
                          "positionB": {{st4PosBInput.value}},
                          "positionBLinks": {{_.split(st4PosBLinksInput.value, "\n")}},
                          "positionOther": {{st4PosOtherInput.value}},
                        },
                      ],

                    }                       
                    return newData
                - value: ''
            createdAt: 2020-09-16T21:28:46.437Z
      - textinput48:
          pluginTemplate:
            id: textinput48
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''0''].info}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 4
                height: 3
                width: 5
            createdAt: 2020-09-16T22:05:29.897Z
      - textinput49:
          pluginTemplate:
            id: textinput49
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['0'].infoLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Information Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 4
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T22:05:39.824Z
      - st1DescInput:
          pluginTemplate:
            id: st1DescInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['0'].description}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container6
                row: 1
                height: 3
                width: 5
            createdAt: 2020-09-16T22:05:56.123Z
      - st2NameInput:
          pluginTemplate:
            id: st2NameInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''1''].name}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Subtopic Name
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: true
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                col: 2
                height: 1
                width: 7
            createdAt: 2020-09-16T22:13:04.369Z
      - st3NameInput:
          pluginTemplate:
            id: st3NameInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''2''].name}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Subtopic Name
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: true
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                col: 2
                height: 1
                width: 7
            createdAt: 2020-09-16T22:13:33.547Z
      - st4NameInput:
          pluginTemplate:
            id: st4NameInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: '{{policiesTableMain.selectedRow.data.subtopics[''3''].name}}'
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Subtopic Name
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: true
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                col: 2
                height: 1
                width: 7
            createdAt: 2020-09-16T22:14:00.379Z
      - st2DescInput:
          pluginTemplate:
            id: st2DescInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['1'].description}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 1
                height: 3
                width: 5
            createdAt: 2020-09-16T22:14:28.958Z
      - st3DescInput:
          pluginTemplate:
            id: st3DescInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['2'].description}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 1
                height: 3
                width: 5
            createdAt: 2020-09-16T22:14:36.274Z
      - st4DescInput:
          pluginTemplate:
            id: st4DescInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['3'].description}}
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 1
                height: 3
                width: 5
            createdAt: 2020-09-16T22:14:41.178Z
      - st2DescLinksInput:
          pluginTemplate:
            id: st2DescLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['1'].descriptionLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container7
                row: 1
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T22:14:55.135Z
      - st3DescLinksInput:
          pluginTemplate:
            id: st3DescLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['2'].descriptionLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container8
                row: 1
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T22:15:00.136Z
      - st4DescLinksInput:
          pluginTemplate:
            id: st4DescLinksInput
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: >-
                    {{policiesTableMain.selectedRow.data.subtopics['3'].descriptionLinks}}
                - validationMessage: ''
                - tooltipText: Each web link should appear on a new line
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: ''
                - validationType: ''
                - label: Description Links
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                container: container9
                row: 1
                col: 6
                height: 3
                width: 6
            createdAt: 2020-09-16T22:15:05.303Z
      - text11:
          pluginTemplate:
            id: text11
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: top
                - scrollOverflow: false
                - tooltipText: ''
                - value: |+
                    **Progress for Saving Uploaded Candidates Will Go Here**

                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                container: bulkLoadModal
                row: 13
                height: 5
                width: 6
            createdAt: 2020-09-17T20:33:36.276Z
      - button6:
          pluginTemplate:
            id: button6
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#3c92dc'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Save
                - exportQuery: ''
                - action: ''
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: bulkLoadModal
                row: 17
                col: 10
                height: 1
                width: 2
            createdAt: 2020-09-17T20:38:16.183Z
      - deletePolicyButton:
          pluginTemplate:
            id: deletePolicyButton
            type: widget
            subtype: ButtonWidget
            template:
              ordered:
                - valueToCopy: ''
                - color: '#cc5248'
                - internalUrlHashParams: ''
                - exportFileType: csv
                - buttonType: action
                - exportTemplate: null
                - url: ''
                - newWindow: false
                - value: Delete Policy
                - exportQuery: ''
                - action: deletePolicy
                - internalUrlQuery: ''
                - internalUrlPath: ''
                - exportFileName: ''
                - loading: ''
                - disabled: ''
            position2:
              position2:
                container: container5
                row: 4
                col: 6
                height: 1
                width: 3
            createdAt: 2020-09-18T00:01:02.091Z
      - stateSelect:
          pluginTemplate:
            id: stateSelect
            type: widget
            subtype: SelectWidget
            template:
              ordered:
                - enableClientSideMatching: true
                - values: '{{window.states}}'
                - allowOutOfRangeValues: false
                - enableFuzzyMatching: true
                - searchValue: ''
                - showFetchingIndicator: true
                - enableCaseSensitivity: false
                - validationMessage: ''
                - displayValue: ''
                - tooltipText: ''
                - value: '{{candidatesTableMain.selectedRow.data.state}}'
                - maxResults: 50
                - placeholder: ''
                - label: State
                - labelMaxWidth: ''
                - labelPlacedOnLeft: false
                - validationState: ''
                - onSelect: ''
                - disabled: ''
                - hideClearButton: false
                - required: false
                - labels: ''
            position2:
              position2:
                container: container2
                col: 7
                height: 1
                width: 4
            createdAt: 2020-09-18T19:33:58.106Z
      - activeSelect:
          pluginTemplate:
            id: activeSelect
            type: widget
            subtype: SelectWidget
            template:
              ordered:
                - enableClientSideMatching: true
                - values: '[false, true]'
                - allowOutOfRangeValues: false
                - enableFuzzyMatching: true
                - searchValue: ''
                - showFetchingIndicator: true
                - enableCaseSensitivity: false
                - validationMessage: ''
                - displayValue: ''
                - tooltipText: ''
                - value: >-
                    {{candidatesTableMain.selectedRow.data.inactive ? true :
                    false}}
                - maxResults: ''
                - placeholder: ''
                - label: Active Candidate
                - labelMaxWidth: '50'
                - labelPlacedOnLeft: false
                - validationState: ''
                - onSelect: ''
                - disabled: ''
                - hideClearButton: false
                - required: false
                - labels: '["Yes","No"]'
            position2:
              position2:
                container: container2
                row: 7
                height: 1
                width: 5
            createdAt: 2020-09-18T20:03:48.501Z
      - linkValidator:
          pluginTemplate:
            id: linkValidator
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - query: return false
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return "invalid"
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: true
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-09-18T20:58:55.814Z
  urlFragmentDefinitions: []
  appThemeId: null
  preloadedAppJavaScript: null
  pageLoadValueOverrides: []
  customDocumentTitle: ''
  isGlobalWidget: false
  isFetching: false
  instrumentationEnabled: false
  customDocumentTitleEnabled: false
  preloadedAppJSLinks:
    array: []
  version: 2.63.23
  responsiveLayoutDisabled: true
  createdAt: null
  loadingIndicatorsDisabled: false
